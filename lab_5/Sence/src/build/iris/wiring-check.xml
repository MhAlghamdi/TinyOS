<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aeb882023e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aeb882b5cf0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aeb882b5cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aeb882c1c38"/></to>
    </wire>
    <wire loc="14:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aeb881f6020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aeb8848a190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aeb8848a190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aeb88486930"/></to>
    </wire>
    <wire loc="15:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb8820ab88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb884a5a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb884a5a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aeb884b46a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:SenseAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2aeb8821dc90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2aeb88666350"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2aeb88666350"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2aeb895ec7b0"/></to>
    </wire>
    <wire loc="21:SenseAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb88292740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb89246020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb89246020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb89913020"/></to>
    </wire>
    <wire loc="22:SenseAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb882a2e08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb89246bd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb89246bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb89913bd8"/></to>
    </wire>
    <wire loc="23:SenseAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb882a8958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb89247390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb89247390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb89914398"/></to>
    </wire>
    <wire loc="24:SenseAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2aeb882b46d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aeb888212d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb888212d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aeb888646d8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb898aa550"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb88e55bf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb88d21b30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb897d9430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb88c04238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb897a6de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb896d6438"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb896359d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb884c40c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aeb88480308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aeb881035c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aeb881035c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aeb881b8d88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88480ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88f1ab40"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88480ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88e55138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88480ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb882c0020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb882c0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb882cb020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb8847f418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2aeb882bfb68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb891034e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2aeb882bfb68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb886b36e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb882cee68"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb88457ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2aeb882cbd88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb884574b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2aeb882cb6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb884ab5e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2aeb882cb6c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aeb882cd558"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aeb882cd558"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aeb882d41f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2aeb882cdbe8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2aeb882bfb68"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2aeb882df388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2aeb882e8e00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2aeb882e8e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb88369430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2aeb882d34f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2aeb882cdbe8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2aeb88321968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb883fa520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2aeb883054d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb88390020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb88390020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893ca710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2aeb8830b4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb883a7d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb883a7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89460710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2aeb883141a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb883c18c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb883c18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894a9710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2aeb8831a658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb88423c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2aeb882e41a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb88367740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb88367740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892ab970"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2aeb88317e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb883ae5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb883ae5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894af710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2aeb882f44d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb88373930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb88373930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892f96a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2aeb882fb658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb8838a740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb8838a740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89385710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2aeb88301968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb883a0430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb883a0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893c1710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2aeb88308968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb883a3120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb883a3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89457710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2aeb882eb968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb8836d020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb8836d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892ba970"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2aeb882f1968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb88384d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb88384d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892f0710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2aeb882f8af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb88387bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb88387bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8937c710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2aeb88310e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb8839d8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb8839d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893b8710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2aeb88311658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb883bed60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb883bed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894a0710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2aeb8831c348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb88417c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2aeb8830d1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb883a9a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb883a9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8940f710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb88369430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892b1970"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2aeb882ed020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb88380120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb88380120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892e7710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2aeb8831f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8840ccd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2aeb882fd348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb8838c500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb8838c500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8938b6a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2aeb88304658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb8838f120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb8838f120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893c7710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2aeb8830a658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb883a6e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb883a6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8945d710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2aeb88313348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb883c0a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb883c0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894a6710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2aeb882f5348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb8837a8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb8837a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892a8970"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2aeb882f3658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb88372a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb88372a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892f6710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2aeb882fa7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb883898c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb883898c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89382710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2aeb88300af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb8839f5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb8839f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893be710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2aeb88319af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb883b62a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb883b62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89454710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2aeb882eaaf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb8836b120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb8836b120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892b7970"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2aeb882f0af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb88383e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb88383e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892ed710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2aeb882f7c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb88386d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb88386d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89379710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2aeb883227e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb883bde18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb883bde18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8949d710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2aeb88306020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb88392e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb88392e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893cd6a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2aeb8830c348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb883a8bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb883a8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89463710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2aeb88315020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb883ad740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb883ad740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894ac710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2aeb8831b4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb884123e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2aeb882e5020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb883685b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb883685b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892ae970"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2aeb882fe1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb8837f2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb8837f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89336710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2aeb88318c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb883af500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb883af500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894b26a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2aeb882fc4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb8838b5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb8838b5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89388710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2aeb883037e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb883a22a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb883a22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893c4710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2aeb883097e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb883a4020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb883a4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8945a710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2aeb883124d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb883bfbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb883bfbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894a3710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2aeb882d6790"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb8836fdc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb8836fdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892bd970"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2aeb882f27e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb88371bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb88371bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892f3710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2aeb882f9968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb88388a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb88388a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb8937f710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2aeb882ffc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb8839e740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb8839e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb893bb710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2aeb8831d1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb884063e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2aeb8830e020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb883ab930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb883ab930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb894126a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2aeb882f6e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb88398e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb88398e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb89376710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2aeb882e9c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb8836a2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb8836a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892b4970"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2aeb882efe00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb88381020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb88381020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb892ea710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb881b7c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2aeb881c1168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2aeb8810ce28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb881dc988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb885826f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb884ab5e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb88486368"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aeb88484020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2aeb884ae090"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aeb884ae090"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2aeb882eaaf0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aeb88483190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2aeb884ad378"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aeb884ad378"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2aeb882eb968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aeb88482338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2aeb884ac500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aeb884ac500"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2aeb882d6790"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aeb884b46a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aeb884c4db8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aeb884c4db8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb8864c5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb884c40c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb884d68e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aeb884d4298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aeb8865c128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb884d68e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb885d3020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2aeb88646858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb885ffab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb885f9c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2aeb884d01c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2aeb884d01c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb885d37c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aeb88673330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2aeb884e03b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2aeb884e03b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb885cfa90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aeb885cfa90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb89593a90"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb885d3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb89596060"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb885d37c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb89596808"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb89590b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb88563698"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb88563698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb88570180"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8958bb60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8855e828"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8855e828"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8856b160"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb8958ae68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aeb8855dc90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb8855dc90"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aeb8856a4e8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2aeb89585060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2aeb88575e70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2aeb88575e70"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2aeb88582df0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2aeb88614cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2aeb88660930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2aeb895ec7b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2aeb895e9520"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2aeb895e9520"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2aeb886911c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb895e8ac8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb88807d18"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb8868eba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb895e8ac8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb886a4c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb886a1778"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8869a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb895e63f0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2aeb886911c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2aeb88806680"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2aeb8868bdf8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2aeb887c4428"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb88812720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb886a4c28"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb887c19a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb8868eba8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2aeb88814060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2aeb887c66a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb887c3b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb8869bac8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb8869bac8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb886aece0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2aeb887bde50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2aeb887c7c28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2aeb88695420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2aeb886b16a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb886a1778"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb887a2840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb887a2840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb89631060"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8879f3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8869a1c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886c0320"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886f6230"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886f6230"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886f15e8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb886ac798"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb882cee68"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb8879c060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb886ae528"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb8879cd18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb887a1dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb887a1dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb896304c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aeb886efad8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aeb881dd3c8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb887a1698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb89631d58"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb887a09d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb8962f0e0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8962f980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8879f3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2aeb8962e130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2aeb89634020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2aeb8962c2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb8965a020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb8879c060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2aeb8965a740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2aeb8879c780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb8965acd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb8879cd18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb89659908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb887aa908"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2aeb887d3368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb888646d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aeb8888b4a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aeb8883cdf8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aeb8885c020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aeb8885c020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88886cd0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb8881a3f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb8885be38"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb8885be38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2aeb888811e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb88820270"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb88860798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb88860798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb88888498"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aeb8881d898"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aeb8885e498"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aeb8885e498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aeb888861c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb8882e848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88858af8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88858af8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88895a18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb8883fce0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb8885f928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb8885f928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb888875b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888330d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888581a0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888581a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888950c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aeb8884d828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2aeb888575e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aeb888575e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2aeb888945e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb8883d080"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb8885aa80"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb8885aa80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb88884ac0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aeb8884a550"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aeb888562e8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aeb888562e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aeb888932e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2aeb8884c260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb8886c190"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb8886c190"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb888ae3f8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb88840130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb8888f130"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb8888f130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb888aa478"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb8888b4a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aeb88c27988"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88873d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb888b4600"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb888b4600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88e340c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb888aa478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb88dc5270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88886cd0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88a59020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2aeb888811e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb88a2d578"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb88888498"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb88a5b388"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aeb888861c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aeb88a5a7e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88876870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb888b72d0"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb888b72d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88dfacd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88895a18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88c48060"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb888875b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb88a5a0c8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb888ae3f8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb88dc1020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb8886bd80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb888b0020"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb888b0020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88e2a220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88877350"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88893e40"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88893e40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88e2e860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888950c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb88d533f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb8885cbe0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb88885910"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb88885910"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb88a59738"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aeb888945e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2aeb88c32268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb88884ac0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb88a2e020"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aeb888932e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aeb88cb9bd0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb8886b570"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb888b1778"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb888b1778"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb88e2b9d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb8885b860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb888844d0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb888844d0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb88a59e50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb88c27988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aeb88c48b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88e340c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88e4d020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2aeb8887f710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88ad7b50"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2aeb8887e320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb88aa7748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb88aa7748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb896d4918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88a59020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aeb89668898"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb88a5b388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb8966ad38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aeb88a5a7e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aeb896681c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb8889e020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb88bd3900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb88bd3900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb8972fd98"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2aeb8889d3d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb88ad3b38"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88dfacd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88e51b48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88c48060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb897e2458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb88a2d578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb8966a060"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb88a5a0c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb89669a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb88dc1020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb89892660"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88e2a220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88f1e670"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88e2e860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88e47860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2aeb888a0250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2aeb88ad8888"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb88a59738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb89667020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aeb88c32268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2aeb88c2d470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aeb88cb9bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aeb897d89c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb88a2e020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb8966ca10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb88dc5270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb89895958"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2aeb8887f020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2aeb88ad75b8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb88e2b9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb88e449d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb88a59e50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb89667738"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb889085e8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb88ba1980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb88ba1980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb89735d50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb889003f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88977910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88904730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb88dc1020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2aeb888fa688"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dfbbd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dfbbd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88e52a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb88979958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb88e294b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb88e294b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb88f22418"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88a552a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2aeb888cf760"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88a562a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2aeb88a4e100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88a56b90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2aeb88b2e430"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88a574d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2aeb88b2ea08"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb88a6f3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb88aa7748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88a4ea48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2aeb88b2fa50"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb88ad52c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb88ba1980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88b030a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2aeb88afcd20"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88b03988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2aeb88b30638"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88b042e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb88b30c10"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88b2d928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb88c0d470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aeb88c0d470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb897aada0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88b2c2a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb88c33bd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb88c33bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c2f5b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88b2c880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88bd2b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88bd2b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb8972d020"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88bd1ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88c32e20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88c32e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88c2fb90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88c40580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2aeb888bab40"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88c41510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb88c332e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aeb88c332e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88c30c38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb88c2ea10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb88d533f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88c30c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb88c4a430"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aeb88c4a430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88c475c8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c2f5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb88c4ad18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb88c4ad18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c46020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88c2fb90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88c492e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88c492e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88c465f8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2aeb88c48b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aeb88cba270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb88cba270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aeb897da870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88c475c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb88cbace0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aeb88cbace0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb897d9a08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c46020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb88cb9638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aeb88cb9638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aeb897d8430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88c465f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dbf9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dbf9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb8988e080"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aeb88cb63f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d10020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d10020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb89804b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88cb6c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88c0dd18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88c0dd18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb897a66c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aeb88cb75d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aeb88e0d5b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aeb88e0d5b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2aeb88e07a08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c41df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d108c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d108c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb89802578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88d0dce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2aeb888dc0d0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88d0f0c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d412a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d0f9a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d41b50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88d0d0f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88977910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2aeb88d50bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aeb88df3660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88d52d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88977910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88d51a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2aeb888bfaf0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88d53d38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d70020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d70020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88d6a5b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d52670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d708c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d708c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d69020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88d68da0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2aeb888cd300"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88d6a5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88e0c3f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aeb88e0c3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88e068c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d69020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88e0cc98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88e0cc98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88e052a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2aeb88d69780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88dfb448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88dfb448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88e522c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88dbda30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88e2a220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88dbc9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88e130e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2aeb88dbb8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aeb88df3660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb88e12020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dfbbd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88e03060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2aeb888cd300"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb88e068c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88dfc2c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aeb88dfc2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88e530c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb88e052a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88dfcbf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88dfcbf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88e539e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2aeb88e07a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aeb88dff3e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aeb88dff3e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aeb88e542d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88e255c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2aeb888c8e48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88e24730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb88dc1020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aeb88e20378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aeb88df3660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2aeb88e1f020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aeb88df3660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aeb88e1fb78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aeb88df3660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88e1e768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88977910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88977910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb89688388"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb89687230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb88979958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aeb896831c0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aeb88978220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb896c6b98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb88a16560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb89667d90"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88a574d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb89666ba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88a562a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb896c75b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88a56b90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb896c7b90"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aeb88a552a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb88aa6510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb896d3698"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb88aa6c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb896d3dd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb896d26c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb88aa5550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2aeb896d2e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2aeb896d6a10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2aeb896d0920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb8972ddc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb88a16560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb8972b890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88bd1ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2aeb897a3020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2aeb88c0ad58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2aeb88c0ad58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2aeb88c04850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb897a3bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb897a0140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb897a0140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb88c03b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb897a5458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88c41510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb897a5d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c41df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2aeb897a44a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aeb88c40580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2aeb88c2c100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb88c2ea10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aeb897d7450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aeb88cb75d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aeb897d6268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aeb88978220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aeb897d6c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aeb88cb63f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aeb897d5578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88cb6c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2aeb897d34f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2aeb897d3c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2aeb897d5d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aeb89802d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aeb88d0f0c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb897ff2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aeb88d0dce8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aeb89801670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d0f9a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb89801d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88d0d0f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2aeb898009d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2aeb88d24690"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2aeb88d24690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2aeb88d1d4c8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2aeb897ffd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2aeb88d22668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2aeb88d1e3b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb88cee930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb88d21b30"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb88d73978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aeb88d6ebf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88d6f020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2aeb88d69780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aeb88d71268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2aeb88d6b638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88d6f740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88d68020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aeb88d6e5b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aeb88d68da0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2aeb88d72c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2aeb88d6b060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2aeb88d723f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2aeb88d6c740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aeb8988aac0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88dbc9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb8988da10"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88dbda30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2aeb8988caf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aeb88dcbdc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aeb88dcbdc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aeb884d4298"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2aeb8988ee60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2aeb88dbb8c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aeb88e0fb78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aeb88e09020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88e0b3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2aeb88e05a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88e0bb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aeb88e042a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aeb88e0a8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aeb88e03060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2aeb88e0d020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2aeb88e07430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2aeb88e0e700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2aeb88e09a90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb88f22418"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb89106578"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aeb88e31458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aeb88e4a3b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88f1e670"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aeb8914ce68"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aeb88e748b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aeb88e255c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aeb88e736d0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aeb88e20378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2aeb88e72368"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2aeb88e1f020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aeb88e71020"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aeb88e1fb78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88e71d90"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88e24730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aeb88e386c8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88f1e670"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88e6c5e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88e1e768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2aeb88e43130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2aeb88f2a900"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2aeb88f2a900"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2aeb882f44d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2aeb88e424f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2aeb88f27b18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2aeb88f27b18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb88f3e1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88e3b1f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f26770"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f26770"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f3dc40"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2aeb88e3bd00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2aeb88f25348"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2aeb88f25348"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2aeb882fe1a0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2aeb88e40e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2aeb88f244c0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2aeb88f244c0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2aeb882e41a0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2aeb88e365e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2aeb88f23648"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2aeb88f23648"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2aeb88f1a020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aeb88e6dac8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aeb88978220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2aeb88e39368"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2aeb887c7c28"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2aeb88ee37d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb89106578"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb898e3750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f3dc40"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f76938"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aeb8914ce68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aeb8914e988"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2aeb88f51e50"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2aeb882ffc78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2aeb88f4f020"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2aeb88301968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2aeb88f537f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aeb89042020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2aeb89042020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aeb8906f808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2aeb88f79480"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2aeb88f75450"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2aeb88f3d5f8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2aeb88f76330"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb88f41020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb88f7ad10"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb88f3e1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb88f741c8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2aeb88f9c888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb89010b50"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aeb89010b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aeb898a7918"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb88f9b5e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb8900d268"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb8900d268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb898a6dd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2aeb88f9d5a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2aeb88fd8020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2aeb88fd8020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2aeb88fd5dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aeb88f9bd90"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aeb881dd3c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2aeb88fbe830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2aeb88fca970"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aeb881dd3c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2aeb88fcf380"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2aeb882f44d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2aeb88fcd4c0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2aeb882f3658"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2aeb88fcc648"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2aeb882f27e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2aeb88fcb7d0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2aeb882f1968"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb8900e9a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb898a6698"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb898a56c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8900dae8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2aeb898a5e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2aeb898aab28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2aeb898a4920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8903b910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb89070160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb8904bd00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb8902e180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb89036e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2aeb8906a020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb89036e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2aeb89066360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb89036e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2aeb89062770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2aeb898e09c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb8904bd00"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2aeb898dba80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aeb89036e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb89103c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb8904bd00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aeb89199b88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb891550e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2aeb891522b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb89146b18"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aeb89146b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb89140b90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb8912dc58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb8904bd00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb89914398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb89907530"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb89913020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb8881a3f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb89913bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb8883d080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2aeb892442a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2aeb899102a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2aeb899102a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888330d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aeb899712c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb89206020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb89971e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb8883d080"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aeb89206020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aeb8925b2c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aeb8925a060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aeb88820270"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aeb8925ac38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aeb8883d080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aeb89258268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aeb8881a3f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2aeb89257020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2aeb892577c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="4:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2aeb884d73e8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.Sensor" loc="41(SenseAppC.Sensor):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoChannel" loc="39(SenseAppC.Sensor.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(SenseAppC.Sensor.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TOne" ref="0x2aeb881b09f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TOne" ref="0x2aeb881b09f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.AMSenderC" loc="47(SenseAppC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.AMSenderC.SenderC" loc="47(SenseAppC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SenseAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2aeb883298a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aeb88329bf0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aeb88326020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2aeb8833e340" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aeb8833e6a8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aeb8833ea10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2aeb8833ed40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2aeb883ca508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aeb883ca870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aeb883cabd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2aeb883c9020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2aeb884d73e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2aeb884d73e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2aeb884d76d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2aeb884e89d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2aeb884e89d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2aeb884e8cc0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb884d2c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb884d2c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb88611cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb88611cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2aeb8860e020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb8865e9f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb8865e9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2aeb8871f020" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2aeb887339f0" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2aeb8875a5c0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2aeb88805370" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2aeb88805370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2aeb88a6cab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2aeb88a643f0" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2aeb89102380" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb89102380"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2aeb891026d0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2aeb890ee020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2aeb890ee020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2aeb890ee770" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb890ee770"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2aeb890eea70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2aeb8913e020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2aeb8913e020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2aeb8913e770" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb8913e770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2aeb8916e6c8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2aeb8916e6c8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2aeb8916ee30" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2aeb8916ee30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2aeb8916d240" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2aeb8916d240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2aeb8916d9b8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2aeb8916d9b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2aeb8916dd60" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2aeb8916b528" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2aeb8916b528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2aeb891e6758" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2aeb891dd348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2aeb891d9e20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2aeb892012a8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x2aeb882b46d0" loc="18:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2aeb882b46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb882b4a20"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb882b4ba8"/>
        <function-ref name="start" scoped="" ref="0x2aeb882b4d30"/>
        <function-ref name="stop" scoped="" ref="0x2aeb882a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2aeb882023e0" loc="6:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aeb882023e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aeb88202730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2aeb88292740" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb88292740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88292a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88292c18"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88292da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8821c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8821c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2aeb8821dc90" loc="9:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb8821dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb88214820"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb88214c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2aeb882a8958" loc="16:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb882a8958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb882a8ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb882a8e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb882a3020"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb882a31a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb882a3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aeb881f6020" loc="7:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb881f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb881f6370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb881f64f8"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb881f6680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb881f6808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb881f6990"/>
        <function-ref name="get" scoped="" ref="0x2aeb881f6b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb881f6ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb881f5330"/>
        <function-ref name="set" scoped="" ref="0x2aeb881f6e28"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb881f5020"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb881f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aeb882a2e08" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb882a2e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb8821b1a8"/>
        <function-ref name="source" scoped="" ref="0x2aeb8821b330"/>
        <function-ref name="address" scoped="" ref="0x2aeb8821b4b8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb8821b640"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb8821b7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb8821b950"/>
        <function-ref name="type" scoped="" ref="0x2aeb8821bad8"/>
        <function-ref name="setType" scoped="" ref="0x2aeb8821bc60"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb8821bde8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb88293020"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb882931a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aeb8820ab88" loc="8:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb8820ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88216dd8"/>
        <function-ref name="fired" scoped="" ref="0x2aeb88217510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb88216238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb88217db0"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb882156c8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb88215278"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88217960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb88205728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb88216808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb88205bc8"/>
        <function-ref name="stop" scoped="" ref="0x2aeb882170c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2aeb882c3160" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb882c3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882c34b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aeb882b5cf0" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aeb882b5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aeb882c40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2aeb882bfb68" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2aeb882bfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb882c0020" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb882c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882c0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2aeb882cee68" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb882cee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aeb882bf1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aeb882bf370"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aeb882bf4f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aeb882bf680"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aeb882bf808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2aeb882cb6c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2aeb882cb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882cba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb882cb020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb882cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882cb370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2aeb882cbd88" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2aeb882cbd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882ca170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2aeb882cdbe8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2aeb882cdbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aeb882cd558" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb882cd558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882cd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2aeb882d34f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2aeb882d34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882d3848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2aeb882df388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2aeb882df388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882df6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882df860"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882df9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882dfb70"/>
        <function-ref name="get" scoped="" ref="0x2aeb882dfcf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882dfe80"/>
        <function-ref name="set" scoped="" ref="0x2aeb882d3030"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882d31b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aeb882d41f0" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb882d41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb882d4540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2aeb88321968" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2aeb88321968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883200f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88320278"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88320400"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88320588"/>
        <function-ref name="get" scoped="" ref="0x2aeb88320710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88320898"/>
        <function-ref name="set" scoped="" ref="0x2aeb88320a20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88320ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2aeb883054d0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2aeb883054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88305820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883059a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88305b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88305cb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88305e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88304020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883041a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88304330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2aeb8830b4d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2aeb8830b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8830b820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8830b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8830bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8830bcb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8830be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8830a020"/>
        <function-ref name="set" scoped="" ref="0x2aeb8830a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8830a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2aeb883141a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2aeb883141a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883144f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88314678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88314800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88314988"/>
        <function-ref name="get" scoped="" ref="0x2aeb88314b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88314c98"/>
        <function-ref name="set" scoped="" ref="0x2aeb88314e20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88313020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2aeb8831a658" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2aeb8831a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8831a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8831ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8831acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8831ae40"/>
        <function-ref name="get" scoped="" ref="0x2aeb8832b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8832b1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8832b330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8832b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2aeb882e41a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2aeb882e41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882e44f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882e4678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882e4800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882e4988"/>
        <function-ref name="get" scoped="" ref="0x2aeb882e4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882e4c98"/>
        <function-ref name="set" scoped="" ref="0x2aeb882e4e20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2aeb88317e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2aeb88317e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883161a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88316330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883164b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88316640"/>
        <function-ref name="get" scoped="" ref="0x2aeb883167c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88316950"/>
        <function-ref name="set" scoped="" ref="0x2aeb88316ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88316c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2aeb882f44d0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2aeb882f44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f4820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f49a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f4cb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f3020"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f31a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2aeb882fb658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2aeb882fb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882fb9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882fbb30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882fbcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882fbe40"/>
        <function-ref name="get" scoped="" ref="0x2aeb882fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882fa1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882fa330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2aeb88301968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2aeb88301968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88301cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88301e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88300020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883001a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88300330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883004b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88300640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2aeb88308968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2aeb88308968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88308cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88308e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88319020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883191a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88319330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883194b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88319640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2aeb882eb968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2aeb882eb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882ebcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882ebe40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882ea1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882ea330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882ea4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882ea640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2aeb882f1968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2aeb882f1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f1cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f1e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f01a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f04b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f0640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2aeb882f8af0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2aeb882f8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f8e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f7020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f7330"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f7640"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f77c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2aeb88310e00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2aeb88310e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8830f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8830f330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8830f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8830f640"/>
        <function-ref name="get" scoped="" ref="0x2aeb8830f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8830f950"/>
        <function-ref name="set" scoped="" ref="0x2aeb8830fad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8830fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2aeb88311658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2aeb88311658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883119a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88311b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88311cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88311e40"/>
        <function-ref name="get" scoped="" ref="0x2aeb88322020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883221a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88322330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2aeb8831c348" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2aeb8831c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8831c698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8831c820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8831c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8831cb30"/>
        <function-ref name="get" scoped="" ref="0x2aeb8831ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8831ce40"/>
        <function-ref name="set" scoped="" ref="0x2aeb8831b020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8831b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2aeb8830d1a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2aeb8830d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8830d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8830d678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8830d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8830d988"/>
        <function-ref name="get" scoped="" ref="0x2aeb8830db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8830dc98"/>
        <function-ref name="set" scoped="" ref="0x2aeb8830de20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8830c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2aeb882e8e00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2aeb882e8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882e61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882e6330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882e64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882e6640"/>
        <function-ref name="get" scoped="" ref="0x2aeb882e67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882e6950"/>
        <function-ref name="set" scoped="" ref="0x2aeb882e6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882e6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2aeb882ed020" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2aeb882ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882ed370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882ed4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882ed680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882ed808"/>
        <function-ref name="get" scoped="" ref="0x2aeb882ed990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882edb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb882edca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882ede28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2aeb8831f020" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2aeb8831f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8831f370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8831f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8831f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8831f808"/>
        <function-ref name="get" scoped="" ref="0x2aeb8831f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8831fb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb8831fca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8831fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2aeb882fd348" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2aeb882fd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882fd698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882fd820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882fd9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882fdb30"/>
        <function-ref name="get" scoped="" ref="0x2aeb882fdcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882fde40"/>
        <function-ref name="set" scoped="" ref="0x2aeb882fc020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2aeb88304658" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2aeb88304658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883049a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88304b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88304cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88304e40"/>
        <function-ref name="get" scoped="" ref="0x2aeb88303020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883031a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88303330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2aeb8830a658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2aeb8830a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8830a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8830ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8830acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8830ae40"/>
        <function-ref name="get" scoped="" ref="0x2aeb88309020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883091a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88309330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2aeb88313348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2aeb88313348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88313698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88313820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883139a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88313b30"/>
        <function-ref name="get" scoped="" ref="0x2aeb88313cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88313e40"/>
        <function-ref name="set" scoped="" ref="0x2aeb88312020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2aeb882f5348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2aeb882f5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f5698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f5820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f5b30"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f5e40"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f4020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2aeb882f3658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2aeb882f3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f3e40"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f21a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f2330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2aeb882fa7e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2aeb882fa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882fab30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882facb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882fae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f9020"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f9330"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2aeb88300af0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2aeb88300af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88300e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882ff020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882ff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882ff330"/>
        <function-ref name="get" scoped="" ref="0x2aeb882ff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882ff640"/>
        <function-ref name="set" scoped="" ref="0x2aeb882ff7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2aeb88319af0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2aeb88319af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88319e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88318020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883181a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88318330"/>
        <function-ref name="get" scoped="" ref="0x2aeb883184b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88318640"/>
        <function-ref name="set" scoped="" ref="0x2aeb883187c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88318950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2aeb882eaaf0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2aeb882eaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882eae40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882e9020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882e91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882e9330"/>
        <function-ref name="get" scoped="" ref="0x2aeb882e94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882e9640"/>
        <function-ref name="set" scoped="" ref="0x2aeb882e97c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2aeb882f0af0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2aeb882f0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882ef020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882ef1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882ef330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882ef4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882ef640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882ef7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882ef950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882efad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2aeb882f7c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2aeb882f7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f6020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f64b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f67c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f6950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2aeb883227e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2aeb883227e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88322b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88322cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88322e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88321020"/>
        <function-ref name="get" scoped="" ref="0x2aeb883211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88321330"/>
        <function-ref name="set" scoped="" ref="0x2aeb883214b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88321640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2aeb88306020" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2aeb88306020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88306570"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883066f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88306880"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88306a08"/>
        <function-ref name="get" scoped="" ref="0x2aeb88306b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88306d18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88305020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2aeb8830c348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2aeb8830c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8830c698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8830c820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8830c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8830cb30"/>
        <function-ref name="get" scoped="" ref="0x2aeb8830ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8830ce40"/>
        <function-ref name="set" scoped="" ref="0x2aeb8830b020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8830b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2aeb88315020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2aeb88315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88315370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883154f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88315680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88315808"/>
        <function-ref name="get" scoped="" ref="0x2aeb88315990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88315b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88315ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88315e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2aeb8831b4d0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2aeb8831b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8831b820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8831b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8831bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8831bcb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8831be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8831a020"/>
        <function-ref name="set" scoped="" ref="0x2aeb8831a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8831a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2aeb882e5020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2aeb882e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882e5370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882e54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882e5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882e5808"/>
        <function-ref name="get" scoped="" ref="0x2aeb882e5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882e5b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb882e5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882e5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2aeb882fe1a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2aeb882fe1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882fe4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882fe678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882fe800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882fe988"/>
        <function-ref name="get" scoped="" ref="0x2aeb882feb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882fec98"/>
        <function-ref name="set" scoped="" ref="0x2aeb882fee20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2aeb88318c78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2aeb88318c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88317020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883171a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88317330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883174b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88317640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883177c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88317950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88317ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2aeb882fc4d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2aeb882fc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882fc820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882fc9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882fcb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882fccb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882fce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882fb020"/>
        <function-ref name="set" scoped="" ref="0x2aeb882fb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2aeb883037e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2aeb883037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88303b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88303cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88303e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88301020"/>
        <function-ref name="get" scoped="" ref="0x2aeb883011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88301330"/>
        <function-ref name="set" scoped="" ref="0x2aeb883014b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88301640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2aeb883097e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2aeb883097e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88309b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88309cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88309e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88308020"/>
        <function-ref name="get" scoped="" ref="0x2aeb883081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88308330"/>
        <function-ref name="set" scoped="" ref="0x2aeb883084b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88308640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2aeb883124d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2aeb883124d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88312820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883129a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88312b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88312cb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88312e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88311020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883111a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88311330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2aeb882d6790" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2aeb882d6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882d6ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882d6c68"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882d6df0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882eb020"/>
        <function-ref name="get" scoped="" ref="0x2aeb882eb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882eb330"/>
        <function-ref name="set" scoped="" ref="0x2aeb882eb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2aeb882f27e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2aeb882f27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f1020"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f1330"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f14b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2aeb882f9968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2aeb882f9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882f9cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882f9e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882f81a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882f8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882f84b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882f8640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2aeb882ffc78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2aeb882ffc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88310020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883101a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88310330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883104b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88310640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883107c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88310950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88310ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2aeb8831d1a0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2aeb8831d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8831d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8831d678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8831d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8831d988"/>
        <function-ref name="get" scoped="" ref="0x2aeb8831db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8831dc98"/>
        <function-ref name="set" scoped="" ref="0x2aeb8831de20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8831c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2aeb8830e020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2aeb8830e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8830e370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8830e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8830e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8830e808"/>
        <function-ref name="get" scoped="" ref="0x2aeb8830e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8830eb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb8830eca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8830ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2aeb882f6e00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2aeb882f6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883071a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88307330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883074b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88307640"/>
        <function-ref name="get" scoped="" ref="0x2aeb883077c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88307950"/>
        <function-ref name="set" scoped="" ref="0x2aeb88307ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88307c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2aeb882e9c78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2aeb882e9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882e8020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882e81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882e8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882e84b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb882e8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882e87c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb882e8950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2aeb882efe00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2aeb882efe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb882ee1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb882ee330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb882ee4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb882ee640"/>
        <function-ref name="get" scoped="" ref="0x2aeb882ee7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb882ee950"/>
        <function-ref name="set" scoped="" ref="0x2aeb882eead8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb882eec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb8836b120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb8836b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8836b470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8836b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8836b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8836b908"/>
        <function-ref name="get" scoped="" ref="0x2aeb8836ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8836bc18"/>
        <function-ref name="set" scoped="" ref="0x2aeb8836bda0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8836a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb883685b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb883685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88368908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88368a90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88368c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88368da0"/>
        <function-ref name="get" scoped="" ref="0x2aeb88367020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883671a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88367330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb8836fdc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb8836fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8836e170"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8836e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8836e480"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8836e608"/>
        <function-ref name="get" scoped="" ref="0x2aeb8836e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8836e918"/>
        <function-ref name="set" scoped="" ref="0x2aeb8836eaa0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8836ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb8836a2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb8836a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8836a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8836a780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8836a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8836aa90"/>
        <function-ref name="get" scoped="" ref="0x2aeb8836ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8836ada0"/>
        <function-ref name="set" scoped="" ref="0x2aeb88369020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb88367740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb88367740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88367a90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88367c18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88367da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8837a020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8837a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8837a330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8837a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8837a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb8836d020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb8836d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8836d370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8836d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8836d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8836d808"/>
        <function-ref name="get" scoped="" ref="0x2aeb8836d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8836db18"/>
        <function-ref name="set" scoped="" ref="0x2aeb8836dca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8836de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb88369430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb88369430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88369780"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88369908"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88369a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88369c18"/>
        <function-ref name="get" scoped="" ref="0x2aeb88369da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88368020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883681a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88368330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb8837a8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb8837a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8837ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8837ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88379020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883791a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88379330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883794b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88379640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892bd970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892bd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892bdcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892bde48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892bc1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892bc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892bc4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892bc640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892bc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892ba970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892ba970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892bacc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892bae48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892b91a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892b9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892b94b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892b9640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892b7970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892b7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892b7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892b7e48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892b61a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892b6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892b64b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892b6640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892b4970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892b4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892b4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892b4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892b31a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892b3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892b34b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892b3640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892b1970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892b1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892b1cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892b1e48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892b01a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892b0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892b04b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892b0640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892b07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892ae970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892ae970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892aecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892aee48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892ad1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892ad4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892ad640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892ab970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892ab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892abcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892abe48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892aa1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892aa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892aa4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892aa640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892aa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892a8970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892a8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892a8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892a8e48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892a61a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb892a6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892a64b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb892a6640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892a67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb88371bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb88371bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88384020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88384330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883844b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88384640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883847c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88384950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88384ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb88381020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb88381020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88381370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88381680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88381808"/>
        <function-ref name="get" scoped="" ref="0x2aeb88381990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88381b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88381ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88381e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb88373930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb88373930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88373c80"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88373e08"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88372020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883721a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88372330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883724b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88372640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb88384d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb88384d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883830d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88383260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883833e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88383570"/>
        <function-ref name="get" scoped="" ref="0x2aeb883836f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88383880"/>
        <function-ref name="set" scoped="" ref="0x2aeb88383a08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88383b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb88380120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb88380120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88380470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883805f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88380780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88380908"/>
        <function-ref name="get" scoped="" ref="0x2aeb88380a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88380c18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88380da0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8837f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb88372a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb88372a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88372da0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88371020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88371330"/>
        <function-ref name="get" scoped="" ref="0x2aeb883714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88371640"/>
        <function-ref name="set" scoped="" ref="0x2aeb883717c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88371950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb88383e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb88383e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88382330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88382640"/>
        <function-ref name="get" scoped="" ref="0x2aeb883827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88382950"/>
        <function-ref name="set" scoped="" ref="0x2aeb88382ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88382c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb8837f2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb8837f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8837f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8837f780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8837f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8837fa90"/>
        <function-ref name="get" scoped="" ref="0x2aeb8837fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8837fda0"/>
        <function-ref name="set" scoped="" ref="0x2aeb8837e020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8837e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892f96a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892f96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892f99f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892f9b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892f9d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892f8020"/>
        <function-ref name="get" scoped="" ref="0x2aeb892f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892f8330"/>
        <function-ref name="set" scoped="" ref="0x2aeb892f84b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892f6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892f6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892f6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892f6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892f5020"/>
        <function-ref name="get" scoped="" ref="0x2aeb892f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892f5330"/>
        <function-ref name="set" scoped="" ref="0x2aeb892f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892f3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892f3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892f3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892f3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892f3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892f2020"/>
        <function-ref name="get" scoped="" ref="0x2aeb892f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892f2330"/>
        <function-ref name="set" scoped="" ref="0x2aeb892f24b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892f2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892f0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892f0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892f0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892f0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892ef020"/>
        <function-ref name="get" scoped="" ref="0x2aeb892ef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892ef330"/>
        <function-ref name="set" scoped="" ref="0x2aeb892ef4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892ed710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892ed710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892eda60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892edbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892edd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892ec020"/>
        <function-ref name="get" scoped="" ref="0x2aeb892ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892ec330"/>
        <function-ref name="set" scoped="" ref="0x2aeb892ec4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892ec640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892ea710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892ea710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892eaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892eabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892ead70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb892e9020"/>
        <function-ref name="get" scoped="" ref="0x2aeb892e91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb892e9330"/>
        <function-ref name="set" scoped="" ref="0x2aeb892e94b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb892e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb892e7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb892e7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb892e7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb892e7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb892e7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89338020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89338330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893384b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89338640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89336710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89336710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89336a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89336be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89336d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89334020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89334330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893344b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89334640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb8838a740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb8838a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8838aa90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8838ac18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8838ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88389020"/>
        <function-ref name="get" scoped="" ref="0x2aeb883891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88389330"/>
        <function-ref name="set" scoped="" ref="0x2aeb883894b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88389640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb88387bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb88387bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88386020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883861a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88386330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883864b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88386640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883867c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88386950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88386ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb8838c500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb8838c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8838c850"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8838c9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8838cb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8838cce8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8838ce70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8838b020"/>
        <function-ref name="set" scoped="" ref="0x2aeb8838b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8838b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb883898c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb883898c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88389c18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88389da0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88388020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883881a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88388330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883884b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88388640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb88386d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb88386d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883980d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88398260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883983e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88398570"/>
        <function-ref name="get" scoped="" ref="0x2aeb883986f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88398880"/>
        <function-ref name="set" scoped="" ref="0x2aeb88398a08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88398b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb8838b5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb8838b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8838b908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8838ba90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8838bc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8838bda0"/>
        <function-ref name="get" scoped="" ref="0x2aeb8838a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8838a1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8838a330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8838a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb88388a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb88388a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88388da0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88387020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883871a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88387330"/>
        <function-ref name="get" scoped="" ref="0x2aeb883874b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88387640"/>
        <function-ref name="set" scoped="" ref="0x2aeb883877c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88387950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb88398e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb88398e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883971a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88397330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883974b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88397640"/>
        <function-ref name="get" scoped="" ref="0x2aeb883977c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88397950"/>
        <function-ref name="set" scoped="" ref="0x2aeb88397ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88397c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8938b6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8938b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8938b9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8938bb80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8938bd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8938a020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8938a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8938a330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8938a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8938a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89388710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89388710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89388a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89388be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89388d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89387020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89387330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893874b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89387640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89385710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89385710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89385a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89385be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89385d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89384020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89384330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893844b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89384640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89382710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89382710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89382a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89382be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89382d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89381020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89381330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893814b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89381640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8937f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8937f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8937fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8937fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8937fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8937e020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8937e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8937e330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8937e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8937e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8937c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8937c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8937ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8937cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8937cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8937b020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8937b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8937b330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8937b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8937b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89379710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89379710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89379a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89379be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89379d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89378020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89378330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893784b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89378640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89376710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89376710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89376a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89376be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89376d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89375020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89375330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893754b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89375640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb8838f120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb8838f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8838f470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8838f5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8838f780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8838f908"/>
        <function-ref name="get" scoped="" ref="0x2aeb8838fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8838fc18"/>
        <function-ref name="set" scoped="" ref="0x2aeb8838fda0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb8839f5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb8839f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8839f908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8839fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8839fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8839fda0"/>
        <function-ref name="get" scoped="" ref="0x2aeb8839e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8839e1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8839e330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8839e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb88392e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb88392e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883911c0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88391348"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883914d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88391658"/>
        <function-ref name="get" scoped="" ref="0x2aeb883917e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88391968"/>
        <function-ref name="set" scoped="" ref="0x2aeb88391af0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88391c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb883a22a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb883a22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a2780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a2a90"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a2da0"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a0020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb8839e740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb8839e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8839ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8839ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8839eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8839d020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8839d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8839d330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8839d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8839d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb88390020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb88390020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88390370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883904f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88390680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88390808"/>
        <function-ref name="get" scoped="" ref="0x2aeb88390990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88390b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88390ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88390e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb883a0430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb883a0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a0780"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a0908"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a0c18"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8839f020"/>
        <function-ref name="set" scoped="" ref="0x2aeb8839f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8839f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb8839d8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb8839d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8839dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8839dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8839c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8839c1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8839c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8839c4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8839c640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8839c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893cd6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893cd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893cd9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893cdb80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893cdd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893cc020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893cc330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893cc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893ca710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893ca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893caa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893cabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893cad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893c9020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893c9330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893c94b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893c9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893c7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893c7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893c7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893c7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893c7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893c6020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893c61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893c6330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893c64b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893c6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893c4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893c4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893c4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893c4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893c4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893c3020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893c3330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893c1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893c1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893c1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893c1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893c1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893c0020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893c01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893c0330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893c04b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893c0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893be710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893bea60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893bebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893bd020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893bd330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893bb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893bba60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893bbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893ba020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893ba330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb893b8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb893b8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb893b8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb893b8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb893b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb893b7020"/>
        <function-ref name="get" scoped="" ref="0x2aeb893b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb893b7330"/>
        <function-ref name="set" scoped="" ref="0x2aeb893b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb893b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb883a8bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb883a8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a7020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a74b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a77c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a7950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb883a4020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb883a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a4370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a4808"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a4b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb883ab930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb883ab930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883abc80"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883abe08"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a91a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a94b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a9640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb883a7d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb883a7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a6260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a6570"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a6880"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a6a08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb883a3120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb883a3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a3470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a3908"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a3c18"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a3da0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb883a9a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb883a9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a9da0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a8020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a8330"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a8640"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a87c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb883a6e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb883a6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883a51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883a5330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883a54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883a5640"/>
        <function-ref name="get" scoped="" ref="0x2aeb883a57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883a5950"/>
        <function-ref name="set" scoped="" ref="0x2aeb883a5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883a5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb883b62a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb883b62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883b65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883b6780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883b6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883b6a90"/>
        <function-ref name="get" scoped="" ref="0x2aeb883b6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883b6da0"/>
        <function-ref name="set" scoped="" ref="0x2aeb883b5020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894126a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894126a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894129f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89412b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89412d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89411020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89411330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894114b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89411640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8940f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8940f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8940fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8940fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8940fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8940e020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8940e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8940e330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8940e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8940e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89463710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89463710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89463a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89463be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89463d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89462020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89462330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894624b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89462640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89460710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89460710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89460a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89460be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89460d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8945f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8945f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8945f330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8945f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8945f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8945d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8945d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8945da60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8945dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8945dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8945c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8945c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8945c330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8945c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8945c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8945a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8945a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8945aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8945abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8945ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89459020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89459330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894594b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89459640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89457710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89457710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89457a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89457be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89457d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89456020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89456330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894564b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89456640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb89454710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb89454710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb89454a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb89454be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb89454d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb89453020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb89453330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894534b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb89453640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb883ad740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb883ad740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883ada90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883adc18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883adda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883c1020"/>
        <function-ref name="get" scoped="" ref="0x2aeb883c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883c1330"/>
        <function-ref name="set" scoped="" ref="0x2aeb883c14b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb883bfbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb883bfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883be020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883be1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883be330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883be4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883be640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883be7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883be950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883bead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb883af500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb883af500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883af850"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883af9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883afb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883afce8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883afe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883ae020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb883c18c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb883c18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883c1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883c1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883c0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883c01a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883c0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883c04b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883c0640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883c07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb883bed60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb883bed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883bd0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883bd260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883bd3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883bd570"/>
        <function-ref name="get" scoped="" ref="0x2aeb883bd6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883bd880"/>
        <function-ref name="set" scoped="" ref="0x2aeb883bda08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883bdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb883ae5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb883ae5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883ae908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883aea90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883aec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883aeda0"/>
        <function-ref name="get" scoped="" ref="0x2aeb883ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883ad1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883ad330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb883c0a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb883c0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883c0da0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883bf020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883bf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883bf330"/>
        <function-ref name="get" scoped="" ref="0x2aeb883bf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883bf640"/>
        <function-ref name="set" scoped="" ref="0x2aeb883bf7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883bf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb883bde18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb883bde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883bc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883bc330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883bc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883bc640"/>
        <function-ref name="get" scoped="" ref="0x2aeb883bc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883bc950"/>
        <function-ref name="set" scoped="" ref="0x2aeb883bcad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883bcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894b26a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894b26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894b29f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894b2b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894b2d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb894b1020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb894b1330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb894b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894af710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894af710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894afa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894afbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894afd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb894ae020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb894ae330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb894ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894ac710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894ac710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894aca60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894acbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894acd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb894ab020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894ab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb894ab330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894ab4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb894ab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894a9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894a9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894a9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894a9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894a9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb894a8020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb894a8330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894a84b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb894a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894a6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894a6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894a6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894a6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb894a5020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb894a5330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894a54b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb894a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894a3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894a3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894a3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894a3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894a3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb894a2020"/>
        <function-ref name="get" scoped="" ref="0x2aeb894a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb894a2330"/>
        <function-ref name="set" scoped="" ref="0x2aeb894a24b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb894a2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb894a0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb894a0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb894a0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb894a0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb894a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8949f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8949f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8949f330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8949f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8949f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8949d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8949d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8949da60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8949dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8949dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8949c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8949c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8949c330"/>
        <function-ref name="set" scoped="" ref="0x2aeb8949c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8949c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883cb3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883cb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883cb730"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883cb8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883cba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883cbbc8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883cbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883e0020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883ddc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883ddc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883dc020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883dc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883dc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883dc4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883dc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883dc7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883dc950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883dcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883ed3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883ed3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883ed730"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883ed8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883eda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883edbc8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883edd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883ec020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883e8c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883e8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883e7020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883e71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883e7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883e74b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883e7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883e77c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883e7950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883e7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883e33e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883e33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883e3730"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883e38b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883e3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883e3bc8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883e3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883f8020"/>
        <function-ref name="set" scoped="" ref="0x2aeb883f81a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883f8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883f4c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883f4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883f3020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883f31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883f3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883f34b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883f3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883f37c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883f3950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883f3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883ee480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883ee958"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883eeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883eec68"/>
        <function-ref name="get" scoped="" ref="0x2aeb883eedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88403020"/>
        <function-ref name="set" scoped="" ref="0x2aeb884031a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88403330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb88400c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb88400c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883ff020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883ff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883ff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883ff4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb883ff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883ff7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883ff950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb883fa520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb883fa520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb883fa870"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb883fa9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb883fab80"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb883fad08"/>
        <function-ref name="get" scoped="" ref="0x2aeb883f9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb883f91a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb883f9330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb883f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb8840ccd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb8840ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb8840a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb8840a228"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb8840a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb8840a538"/>
        <function-ref name="get" scoped="" ref="0x2aeb8840a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb8840a848"/>
        <function-ref name="set" scoped="" ref="0x2aeb8840a9d0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb8840ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb884063e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb884063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88406730"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884068b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88406a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88406bc8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88406d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88405020"/>
        <function-ref name="set" scoped="" ref="0x2aeb884051a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88405330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb88417c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb88417c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88416020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884161a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88416330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb884164b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88416640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb884167c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88416950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88416ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb884123e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb884123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88412730"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884128b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88412a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88412bc8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88412d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88410020"/>
        <function-ref name="set" scoped="" ref="0x2aeb884101a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88410330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb88423c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb88423c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88422020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884221a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88422330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb884224b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88422640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb884227c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88422950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88422ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb884574b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb884574b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88457800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2aeb88457ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb88457ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aeb88457e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aeb88456020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aeb884561a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aeb88456330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aeb884564b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2aeb8847f418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb8847f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb8847f768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aeb882c1c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aeb882c1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aeb88480020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2aeb88480ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88480ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb8847f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2aeb88480308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aeb88480308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88480658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aeb884807e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aeb88480968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aeb880e61c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aeb880e61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb880e6518"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb880e66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aeb881035c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aeb881035c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88103918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aeb88103aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aeb88103c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aeb881b7c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aeb881b7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb881b6020"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb881b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2aeb881c1168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aeb881c1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aeb881c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aeb881b8d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aeb881b8d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb881b7170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aeb881b72f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aeb881b7480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2aeb881dc988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb881dc988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aeb881dccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2aeb8810ce28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aeb8810ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aeb881d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2aeb881dd3c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aeb881dd3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aeb881dd718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aeb8848a190" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb8848a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb8848a4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb8848a668"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb8848a7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb8848a978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb8848ab00"/>
        <function-ref name="get" scoped="" ref="0x2aeb8848ac88"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb8848ae10"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb884894b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88489020"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb884891a8"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb88489330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2aeb88484020" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2aeb88484020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88484370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884844f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88484680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88484808"/>
        <function-ref name="get" scoped="" ref="0x2aeb88484990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88484b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88484ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88484e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb88486368" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb88486368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb884866b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2aeb88483190" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2aeb88483190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb884834e0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88483668"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb884837f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88483978"/>
        <function-ref name="get" scoped="" ref="0x2aeb88483b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88483c88"/>
        <function-ref name="set" scoped="" ref="0x2aeb88483e10"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88482020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aeb88486930" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb88486930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb88486c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb88486e08"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb88485020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb884851a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb88485330"/>
        <function-ref name="get" scoped="" ref="0x2aeb884854b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb88485640"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb88485c60"/>
        <function-ref name="set" scoped="" ref="0x2aeb884857c8"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb88485950"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb88485ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2aeb88482338" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2aeb88482338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88482688"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88482810"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88482998"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88482b20"/>
        <function-ref name="get" scoped="" ref="0x2aeb88482ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88482e30"/>
        <function-ref name="set" scoped="" ref="0x2aeb88481020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb884811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2aeb884ae090" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2aeb884ae090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb884ae3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884ae568"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb884ae6f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb884ae878"/>
        <function-ref name="get" scoped="" ref="0x2aeb884aea00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb884aeb88"/>
        <function-ref name="set" scoped="" ref="0x2aeb884aed10"/>
        <function-ref name="clr" scoped="" ref="0x2aeb884ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2aeb884ad378" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2aeb884ad378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb884ad6c8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884ad850"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb884ad9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb884adb60"/>
        <function-ref name="get" scoped="" ref="0x2aeb884adce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb884ade70"/>
        <function-ref name="set" scoped="" ref="0x2aeb884ac020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb884ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2aeb884ab5e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb884ab5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb884ab938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2aeb884ac500" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2aeb884ac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb884ac850"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb884ac9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb884acb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb884acce8"/>
        <function-ref name="get" scoped="" ref="0x2aeb884ace70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb884ab020"/>
        <function-ref name="set" scoped="" ref="0x2aeb884ab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb884ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb884a5a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb884a5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88669d60"/>
        <function-ref name="fired" scoped="" ref="0x2aeb8866b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb886691c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb8866bd10"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb88668648"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb886681f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb8866b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb8866c620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb88669790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb8866cac0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8866b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aeb884b46a0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2aeb884b46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb884c9a18"/>
        <function-ref name="fired" scoped="" ref="0x2aeb884b1158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb884b1e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb884b19f8"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb884c82e8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb884c9e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb884b15a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb884b2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb884c9448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb884b2810"/>
        <function-ref name="stop" scoped="" ref="0x2aeb884b2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aeb884c4db8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2aeb884c4db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb884bf088"/>
        <function-ref name="fired" scoped="" ref="0x2aeb884c2708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb884c0470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb884c0020"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb884bf928"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb884bf4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb884c2b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb884c3930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb884c0a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb884c3dd0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb884c22b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb884d4298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb884d4298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb884d4e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb884c40c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb884c40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb884c4410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2aeb884e03b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2aeb884e03b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb884df130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb884dfa40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb884df5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb884da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb884d68e8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb884d68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb884d6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2aeb884d01c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2aeb884d01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb884e2918"/>
        <function-ref name="fired" scoped="" ref="0x2aeb884e3980"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb884e2310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb884e3e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb884e2da0"/>
        <function-ref name="start" scoped="" ref="0x2aeb884e3020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb884e34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb885d37c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb885d37c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb885cf020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb885d0020"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb885d0930"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb885d04a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb885cf4a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb885d1578"/>
        <function-ref name="stop" scoped="" ref="0x2aeb885d1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb885d3020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb885d3020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2aeb880eb388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2aeb880eb388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb885d3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb885cfa90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb885cfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb885cd828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb885cc190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb885cdcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb885cc618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2aeb8958bb60" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8958bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb8958a020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb8958a1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2aeb8958a330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb8958a4b8"/>
        <function-ref name="setControlB" scoped="" ref="0x2aeb8958a640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb8958a7c8"/>
        <function-ref name="getControlB" scoped="" ref="0x2aeb8958a950"/>
        <function-ref name="setControlA" scoped="" ref="0x2aeb8958aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb89596808" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb89596808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb89593020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb89594020"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb89594930"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb895944a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb895934a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb89595598"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89595a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb89596060" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb89596060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb895963b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb89593a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb89593a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb89591828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb89590190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb89591cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb89590618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2aeb89585060" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2aeb89585060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2aeb895853b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2aeb89585538"/>
        <function-ref name="controlABusy" scoped="" ref="0x2aeb895856c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2aeb89585848"/>
        <function-ref name="countBusy" scoped="" ref="0x2aeb895859d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x2aeb89585b58"/>
        <function-ref name="getAssr" scoped="" ref="0x2aeb89585ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x2aeb89585e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2aeb8958ae68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb8958ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb89586798"/>
        <function-ref name="fired" scoped="" ref="0x2aeb895884f8"/>
        <function-ref name="get" scoped="" ref="0x2aeb89589a18"/>
        <function-ref name="reset" scoped="" ref="0x2aeb89588980"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb89586c20"/>
        <function-ref name="set" scoped="" ref="0x2aeb89588020"/>
        <function-ref name="start" scoped="" ref="0x2aeb89588e08"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89586310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aeb89590b98" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb89590b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb8958cdb8"/>
        <function-ref name="test" scoped="" ref="0x2aeb8958c4a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8958f760"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb8958b270"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb8958b748"/>
        <function-ref name="reset" scoped="" ref="0x2aeb8958e580"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb8958e0f8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb8958c930"/>
        <function-ref name="set" scoped="" ref="0x2aeb8958fbe8"/>
        <function-ref name="start" scoped="" ref="0x2aeb8958ea08"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8958c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2aeb8855e828" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8855e828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb8855eb78"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb8855ed00"/>
        <function-ref name="getControlA" scoped="" ref="0x2aeb8855d020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb8855d1a8"/>
        <function-ref name="setControlB" scoped="" ref="0x2aeb8855d330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb8855d4b8"/>
        <function-ref name="getControlB" scoped="" ref="0x2aeb8855d640"/>
        <function-ref name="setControlA" scoped="" ref="0x2aeb8855d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2aeb88575e70" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2aeb88575e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2aeb885741e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2aeb88574370"/>
        <function-ref name="controlABusy" scoped="" ref="0x2aeb885744f8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2aeb88574680"/>
        <function-ref name="countBusy" scoped="" ref="0x2aeb88574808"/>
        <function-ref name="compareABusy" scoped="" ref="0x2aeb88574990"/>
        <function-ref name="getAssr" scoped="" ref="0x2aeb88574b18"/>
        <function-ref name="setAssr" scoped="" ref="0x2aeb88574ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aeb8855dc90" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb8855dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb885754a8"/>
        <function-ref name="fired" scoped="" ref="0x2aeb88576238"/>
        <function-ref name="get" scoped="" ref="0x2aeb8855c858"/>
        <function-ref name="reset" scoped="" ref="0x2aeb885766c0"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb88575930"/>
        <function-ref name="set" scoped="" ref="0x2aeb8855cce0"/>
        <function-ref name="start" scoped="" ref="0x2aeb88576b48"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88575020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb88563698" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb88563698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb8855f930"/>
        <function-ref name="test" scoped="" ref="0x2aeb8855f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb885623a8"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb8855fdb8"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb8855e2f0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb885611f8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb88562d08"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb8855f4a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88562830"/>
        <function-ref name="start" scoped="" ref="0x2aeb88561680"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88561b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2aeb8856b160" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8856b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb8856b4b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb8856b638"/>
        <function-ref name="getControlA" scoped="" ref="0x2aeb8856b7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb8856b948"/>
        <function-ref name="setControlB" scoped="" ref="0x2aeb8856bad0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb8856bc58"/>
        <function-ref name="getControlB" scoped="" ref="0x2aeb8856bde0"/>
        <function-ref name="setControlA" scoped="" ref="0x2aeb8856a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aeb885826f0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb885826f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aeb88582a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2aeb88582df0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2aeb88582df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2aeb88581170"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2aeb885812f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2aeb88581480"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2aeb88581608"/>
        <function-ref name="countBusy" scoped="" ref="0x2aeb88581790"/>
        <function-ref name="compareABusy" scoped="" ref="0x2aeb88581918"/>
        <function-ref name="getAssr" scoped="" ref="0x2aeb88581aa0"/>
        <function-ref name="setAssr" scoped="" ref="0x2aeb88581c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aeb8856a4e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb8856a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb88583db8"/>
        <function-ref name="fired" scoped="" ref="0x2aeb88584a20"/>
        <function-ref name="get" scoped="" ref="0x2aeb885840c0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb88583020"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb88582270"/>
        <function-ref name="set" scoped="" ref="0x2aeb88584548"/>
        <function-ref name="start" scoped="" ref="0x2aeb885834a8"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88583930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb88570180" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb88570180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb8856c270"/>
        <function-ref name="test" scoped="" ref="0x2aeb8856d930"/>
        <function-ref name="get" scoped="" ref="0x2aeb88570d00"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb8856c6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb8856cbd0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb8856fb58"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb8856f6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb8856ddb8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8856f1f8"/>
        <function-ref name="start" scoped="" ref="0x2aeb8856d020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8856d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2aeb88614cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2aeb88614cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb886120a0"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb88612228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aeb885f9c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb885f9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88614410"/>
        <function-ref name="fired" scoped="" ref="0x2aeb886154a8"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb88615db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88615930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb88614898"/>
        <function-ref name="start" scoped="" ref="0x2aeb886169f0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88615020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb885ffab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb885ffab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb885fbd60"/>
        <function-ref name="fired" scoped="" ref="0x2aeb885fc470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb885fb1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb885fcd10"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb885f9648"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb885f91f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb885fc8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb885fd620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb885fb790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb885fdac0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb885fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2aeb88660930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2aeb88660930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb88660c80"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb88660e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2aeb88646858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2aeb88646858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88662bc0"/>
        <function-ref name="fired" scoped="" ref="0x2aeb886631c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb88662020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb88663a60"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb886604d8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb88660088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88663610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb886643d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb886625f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb88664878"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88664d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb8864c5e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb8864c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88647988"/>
        <function-ref name="fired" scoped="" ref="0x2aeb88649020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb88649d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb88649900"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb886462d8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb88647df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88649490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb8864a198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb88647398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb8864a658"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8864ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb8865c128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb8865c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb8865cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aeb88673330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb88673330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb886720c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb886729d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb88672548"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb88672e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2aeb88666350" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="SenseAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb88666350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb88665020"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb88665470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2aeb895ec7b0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb895ec7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb895eb370"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb895eb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb895e63f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb895e63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb895e6740"/>
        <function-ref name="configure" scoped="" ref="0x2aeb895e68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2aeb895e9520" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb895e9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb895e80c0"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb895e8510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2aeb895e8ac8" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb895e8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2aeb895e8e18"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb895e6020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2aeb895e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2aeb886911c8" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb886911c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb88691d10"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb886901c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2aeb8868bdf8" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2aeb8868bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb8868fa18"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb8868e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2aeb8868eba8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb8868eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2aeb8868a020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb8868a1a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2aeb8868a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2aeb886a4c28" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb886a4c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88688020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb886881a8"/>
        <function-ref name="request" scoped="" ref="0x2aeb88688330"/>
        <function-ref name="granted" scoped="" ref="0x2aeb886884b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88688640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb8869a1c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8869a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb8869a518"/>
        <function-ref name="configure" scoped="" ref="0x2aeb8869a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2aeb88695420" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2aeb88695420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2aeb88695770"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb886958f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2aeb8869bac8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb8869bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2aeb8869be18"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb8869f020"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb8869f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb886a1778" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb886a1778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb886a1ac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb886a1c50"/>
        <function-ref name="request" scoped="" ref="0x2aeb886a1dd8"/>
        <function-ref name="granted" scoped="" ref="0x2aeb886a0020"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb886a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb886b36e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb886b36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb886b3a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2aeb886b16a8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2aeb886b16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2aeb886b19f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb886b1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2aeb886aece0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb886aece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2aeb886b10a0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb886b1228"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb886b13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2aeb886c0320" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886c0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2aeb886c0670"/>
        <function-ref name="getAdmux" scoped="" ref="0x2aeb886c07f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2aeb886c0980"/>
        <function-ref name="isEnabled" scoped="" ref="0x2aeb886c0b08"/>
        <function-ref name="enableAdc" scoped="" ref="0x2aeb886c0c90"/>
        <function-ref name="setAdmux" scoped="" ref="0x2aeb886c0e18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2aeb886ad020"/>
        <function-ref name="isComplete" scoped="" ref="0x2aeb886ad1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb886ad330"/>
        <function-ref name="disableAdc" scoped="" ref="0x2aeb886ad4b8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2aeb886ad640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2aeb886ad7c8"/>
        <function-ref name="startConversion" scoped="" ref="0x2aeb886ad950"/>
        <function-ref name="isStarted" scoped="" ref="0x2aeb886adbd8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2aeb886add60"/>
        <function-ref name="setContinuous" scoped="" ref="0x2aeb886ac020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2aeb886ac1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2aeb886ac330"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb886ac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2aeb886ae528" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb886ae528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aeb886ae878"/>
        <function-ref name="stop" scoped="" ref="0x2aeb886aea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2aeb886ac798" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb886ac798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aeb886acae8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aeb886acc70"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aeb886acdf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aeb886bf020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aeb886bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2aeb886f6230" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886f6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2aeb886f6580"/>
        <function-ref name="getAdmux" scoped="" ref="0x2aeb886f6708"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2aeb886f6890"/>
        <function-ref name="isEnabled" scoped="" ref="0x2aeb886f6a18"/>
        <function-ref name="enableAdc" scoped="" ref="0x2aeb886f6ba0"/>
        <function-ref name="setAdmux" scoped="" ref="0x2aeb886f6d28"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2aeb886f5020"/>
        <function-ref name="isComplete" scoped="" ref="0x2aeb886f51a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb886f5330"/>
        <function-ref name="disableAdc" scoped="" ref="0x2aeb886f54b8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2aeb886f5640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2aeb886f57c8"/>
        <function-ref name="startConversion" scoped="" ref="0x2aeb886f5950"/>
        <function-ref name="isStarted" scoped="" ref="0x2aeb886f5bd8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2aeb886f5d60"/>
        <function-ref name="setContinuous" scoped="" ref="0x2aeb886f4020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2aeb886f41a8"/>
        <function-ref name="getValue" scoped="" ref="0x2aeb886f4330"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb886f44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2aeb886f15e8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2aeb886f15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2aeb886f1938"/>
        <function-ref name="getAdmux" scoped="" ref="0x2aeb886f1ac0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2aeb886f1c48"/>
        <function-ref name="isEnabled" scoped="" ref="0x2aeb886f1dd0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2aeb886f0020"/>
        <function-ref name="setAdmux" scoped="" ref="0x2aeb886f01a8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2aeb886f0330"/>
        <function-ref name="isComplete" scoped="" ref="0x2aeb886f04b8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb886f0640"/>
        <function-ref name="disableAdc" scoped="" ref="0x2aeb886f07c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2aeb886f0950"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2aeb886f0ad8"/>
        <function-ref name="startConversion" scoped="" ref="0x2aeb886f0c60"/>
        <function-ref name="isStarted" scoped="" ref="0x2aeb886ef020"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2aeb886ef1a8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2aeb886ef330"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2aeb886ef4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2aeb886ef640"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb886ef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aeb886efad8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aeb886efad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aeb886efe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aeb887a1698" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb887a1698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aeb887a1a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb887a1b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb8879f3c8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8879f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb8879f738"/>
        <function-ref name="configure" scoped="" ref="0x2aeb8879f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2aeb887a1dd8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb887a1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb887a0170"/>
        <function-ref name="requested" scoped="" ref="0x2aeb887a02f8"/>
        <function-ref name="granted" scoped="" ref="0x2aeb887a0480"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb887a0608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb887a0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb887a2840" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb887a2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb887a2bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb887a2d38"/>
        <function-ref name="request" scoped="" ref="0x2aeb887a1020"/>
        <function-ref name="granted" scoped="" ref="0x2aeb887a11a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb887a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aeb887a09d8" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb887a09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb887a0d28"/>
        <function-ref name="userId" scoped="" ref="0x2aeb8879f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb896359d0" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb896359d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb89635d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2aeb89634020" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2aeb89634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aeb89634370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aeb896344f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aeb89634680"/>
        <function-ref name="dequeue" scoped="" ref="0x2aeb89634808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aeb89631d58" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb89631d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aeb896300f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb89630278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb8962f980" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8962f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb8962fcf0"/>
        <function-ref name="configure" scoped="" ref="0x2aeb8962fe78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2aeb8962e130" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aeb8962e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aeb8962e480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aeb8962e608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aeb8962e790"/>
        <function-ref name="dequeue" scoped="" ref="0x2aeb8962e918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2aeb896304c0" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb896304c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb89630810"/>
        <function-ref name="requested" scoped="" ref="0x2aeb89630998"/>
        <function-ref name="granted" scoped="" ref="0x2aeb89630b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb89630ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb89630e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aeb8962eb60" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb8962eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb8962d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb8962d1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb8962d330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb8962d4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb8962d640"/>
        <function-ref name="get" scoped="" ref="0x2aeb8962d7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb8962d950"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb8962c020"/>
        <function-ref name="set" scoped="" ref="0x2aeb8962dc60"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb8962dad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb8962dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb89631060" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb89631060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb896313d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb89631558"/>
        <function-ref name="request" scoped="" ref="0x2aeb896316e0"/>
        <function-ref name="granted" scoped="" ref="0x2aeb89631868"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb896319f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aeb8962f0e0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb8962f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb8962f430"/>
        <function-ref name="userId" scoped="" ref="0x2aeb8962f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2aeb8962c2e8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2aeb8962c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb8962c638"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb8962c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2aeb8879c780" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2aeb8879c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2aeb8879cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2aeb8879cd18" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb8879cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb887aa0a0"/>
        <function-ref name="requested" scoped="" ref="0x2aeb887aa228"/>
        <function-ref name="granted" scoped="" ref="0x2aeb887aa3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb887aa538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb887aa6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2aeb8879c060" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb8879c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aeb8879c3b0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8879c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2aeb887aa908" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb887aa908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb887aac58"/>
        <function-ref name="userId" scoped="" ref="0x2aeb887aade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2aeb8965a740" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2aeb8965a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2aeb8965aa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2aeb8965acd8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2aeb8965acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb896590a0"/>
        <function-ref name="requested" scoped="" ref="0x2aeb89659228"/>
        <function-ref name="granted" scoped="" ref="0x2aeb896593b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb89659538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb896596c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2aeb8965a020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb8965a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aeb8965a370"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8965a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2aeb89659908" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb89659908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb89659c58"/>
        <function-ref name="userId" scoped="" ref="0x2aeb89659de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2aeb887bde50" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2aeb887bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2aeb887bfbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2aeb887c66a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb887c66a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb887c5370"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb887c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2aeb887c4428" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2aeb887c4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb887c3020"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb887c34a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2aeb887c19a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb887c19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2aeb887c1cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb887c1e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2aeb887c0030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2aeb887c3b18" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2aeb887c3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2aeb887c3e68"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb887c1020"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb887c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2aeb887d3368" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2aeb887d3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb887d36b8"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb887d3840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2aeb887c7c28" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2aeb887c7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2aeb887e49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2aeb88806680" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2aeb88806680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb88815370"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb888157e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2aeb88814060" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2aeb88814060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2aeb88814bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2aeb88812088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2aeb88812720" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb88812720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88812a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88812c18"/>
        <function-ref name="request" scoped="" ref="0x2aeb88812da0"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88811020"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb888111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2aeb88807d18" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2aeb88807d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2aeb8882a0a0"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb8882a228"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2aeb8882a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb888212d0" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb888212d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88821620"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb888217a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb88821930"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88821ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aeb8883cdf8" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aeb8883cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb8881a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb8881a3f8" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb8881a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8881a748"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8881a8d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb8881aa58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8881abe0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8881ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb88820270" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb88820270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb888205c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88820748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb888208d0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88820a58"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88820be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aeb8881d898" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aeb8881d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8881dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aeb8882e848" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb8882e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aeb8882eb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aeb8882ed20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aeb88839020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aeb888391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb8883fce0" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb8883fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8881d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aeb888330d0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888330d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb88833420"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb888335a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb88833730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aeb8884d828" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aeb8884d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aeb8884db78"/>
        <function-ref name="setRetries" scoped="" ref="0x2aeb8884dd00"/>
        <function-ref name="getRetries" scoped="" ref="0x2aeb88838020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aeb888381a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aeb88838330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb8883d080" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb8883d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb8883d3d0"/>
        <function-ref name="source" scoped="" ref="0x2aeb8883d558"/>
        <function-ref name="address" scoped="" ref="0x2aeb8883d6e0"/>
        <function-ref name="destination" scoped="" ref="0x2aeb8883d868"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb8883d9f0"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb8883db78"/>
        <function-ref name="type" scoped="" ref="0x2aeb8883dd00"/>
        <function-ref name="setType" scoped="" ref="0x2aeb8883b020"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb8883b1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb8883b330"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb8883b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aeb8884a550" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aeb8884a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aeb8884a8a0"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb8884aa28"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb8884abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2aeb8884c260" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2aeb8884c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb88849700"/>
        <function-ref name="clear" scoped="" ref="0x2aeb88849de0"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb88849020"/>
        <function-ref name="set" scoped="" ref="0x2aeb888414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aeb88840130" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb88840130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb88867700"/>
        <function-ref name="clear" scoped="" ref="0x2aeb88867de0"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb88867020"/>
        <function-ref name="set" scoped="" ref="0x2aeb888654f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb888646d8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb888646d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88864a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88864bb0"/>
        <function-ref name="start" scoped="" ref="0x2aeb88864d38"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88860020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aeb88873d28" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88873d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88870388"/>
        <function-ref name="get" scoped="" ref="0x2aeb88872e00"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb888728f0"/>
        <function-ref name="set" scoped="" ref="0x2aeb88870898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aeb8888f130" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb8888f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb8888e588"/>
        <function-ref name="clear" scoped="" ref="0x2aeb8888ec68"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb8888fe80"/>
        <function-ref name="set" scoped="" ref="0x2aeb8888d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aeb8885c020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aeb8885c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb8885c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb8885be38" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb8885be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8885a1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8885a348"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb8885a4d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8885a658"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8885a7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb88860798" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb88860798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88860ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88860c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88860df8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb8885f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb8885f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aeb8885e498" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aeb8885e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8885e7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aeb88876870" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88876870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88873020"/>
        <function-ref name="get" scoped="" ref="0x2aeb888759a0"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88875490"/>
        <function-ref name="set" scoped="" ref="0x2aeb88873530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aeb88858af8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88858af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aeb88858e48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aeb88857020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aeb888571a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aeb88857330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb8885f928" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb8885f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8885fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aeb8886c190" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb8886c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb8886a700"/>
        <function-ref name="clear" scoped="" ref="0x2aeb8886ade0"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb8886a020"/>
        <function-ref name="set" scoped="" ref="0x2aeb888694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aeb8886bd80" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb8886bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb8886e928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aeb88877350" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88877350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88855a40"/>
        <function-ref name="get" scoped="" ref="0x2aeb88855530"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88855020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88876020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aeb888581a0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888581a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb888584f0"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb88858678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb88858800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aeb8885cbe0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb8885cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8885b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aeb888575e0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aeb888575e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aeb88857930"/>
        <function-ref name="setRetries" scoped="" ref="0x2aeb88857ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2aeb88857c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aeb88857dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aeb88856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb8885aa80" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb8885aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb8885add0"/>
        <function-ref name="source" scoped="" ref="0x2aeb88859020"/>
        <function-ref name="address" scoped="" ref="0x2aeb888591a8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb88859330"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb888594b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb88859640"/>
        <function-ref name="type" scoped="" ref="0x2aeb888597c8"/>
        <function-ref name="setType" scoped="" ref="0x2aeb88859950"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb88859ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb88859c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb88859de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aeb888562e8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aeb888562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aeb88856738"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb888568c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88856a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aeb8886b570" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb8886b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aeb8886b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aeb8885b860" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb8885b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8885bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb8888b4a0" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb8888b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb8888b7f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb8888b978"/>
        <function-ref name="start" scoped="" ref="0x2aeb8888bb00"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8888bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aeb888b4600" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb888b4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb888b3bf0"/>
        <function-ref name="get" scoped="" ref="0x2aeb888b36e0"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb888b31d0"/>
        <function-ref name="set" scoped="" ref="0x2aeb888b1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2aeb8887f710" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2aeb8887f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb8887fa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2aeb8887e320" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2aeb8887e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb8887e770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb8887e8f8"/>
        <function-ref name="request" scoped="" ref="0x2aeb8887ea80"/>
        <function-ref name="granted" scoped="" ref="0x2aeb8887ec08"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb8887ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aeb88886cd0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88886cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb888850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb88888498" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb88888498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb888887e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88888970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88888af8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88888c80"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88888e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aeb888861c8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aeb888861c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88886518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aeb8889e020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb8889e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2aeb8889e370"/>
        <function-ref name="address" scoped="" ref="0x2aeb8889e4f8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb8889e680"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb8889e808"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb8889e990"/>
        <function-ref name="pan" scoped="" ref="0x2aeb8889eb18"/>
        <function-ref name="setPan" scoped="" ref="0x2aeb8889eca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb8889ee28"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb8889d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2aeb8889d3d0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2aeb8889d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8889d720"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8889d8a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb8889da30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8889dbb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8889dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aeb888b72d0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb888b72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb888b5898"/>
        <function-ref name="get" scoped="" ref="0x2aeb888b5388"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb888b7e50"/>
        <function-ref name="set" scoped="" ref="0x2aeb888b5da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aeb88895a18" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88895a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aeb88895d68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aeb88894020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aeb888941a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aeb88894330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2aeb888811e0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2aeb888811e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88881530"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb888816b8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88881840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb888819c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88881b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb888875b0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb888875b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88887900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aeb888ae3f8" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb888ae3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb888ada88"/>
        <function-ref name="clear" scoped="" ref="0x2aeb888ac190"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb888ad3a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb888ac870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aeb888b0020" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb888b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb888b0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aeb88893e40" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88893e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88890530"/>
        <function-ref name="get" scoped="" ref="0x2aeb88890020"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88891a18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88890a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aeb888950c0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb888950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb88895410"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb88895598"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb88895720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2aeb888a0250" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2aeb888a0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb888a05a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb888a0728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb888a08b0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb888a0a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb888a0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aeb88885910" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb88885910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88885c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aeb888945e0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aeb888945e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aeb88894930"/>
        <function-ref name="setRetries" scoped="" ref="0x2aeb88894ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2aeb88894c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aeb88894dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aeb88893020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aeb888932e8" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aeb888932e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aeb88893638"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb888937c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88893948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb88884ac0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb88884ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb88884e10"/>
        <function-ref name="source" scoped="" ref="0x2aeb88882020"/>
        <function-ref name="address" scoped="" ref="0x2aeb888821a8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb88882330"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb888824b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb88882640"/>
        <function-ref name="type" scoped="" ref="0x2aeb888827c8"/>
        <function-ref name="setType" scoped="" ref="0x2aeb88882950"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb88882ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb88882c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb88882de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aeb888aa478" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb888aa478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb888a9900"/>
        <function-ref name="clear" scoped="" ref="0x2aeb888a8020"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb888a9220"/>
        <function-ref name="set" scoped="" ref="0x2aeb888a8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2aeb8887f020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2aeb8887f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb8887f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aeb888b1778" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb888b1778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aeb888b1ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aeb888844d0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb888844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88884820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2aeb888cd300" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2aeb888cd300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aeb888cd650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2aeb888e1c00" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2aeb888e1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2aeb888be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2aeb888cf760" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2aeb888cf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb888cfab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2aeb888cfc38"/>
        <function-ref name="source" scoped="" ref="0x2aeb888cfdc0"/>
        <function-ref name="destination" scoped="" ref="0x2aeb888db020"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb888db1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb888db330"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb888db4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2aeb888d7570" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2aeb888d7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2aeb888d78c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2aeb888d7a48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2aeb888d7bd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2aeb888d7d58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2aeb888df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aeb889003f0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb889003f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb88900740"/>
        <function-ref name="wait" scoped="" ref="0x2aeb889008c8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88900a50"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb88900bd8"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb88900d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2aeb888fa688" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2aeb888fa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb888fa9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb888fab60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb888face8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb888fae70"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88904020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb889041a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2aeb88904730" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88904730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb888ffcc0"/>
        <function-ref name="clear" scoped="" ref="0x2aeb888f8420"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb888ff5e0"/>
        <function-ref name="set" scoped="" ref="0x2aeb888f8b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2aeb888c8e48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2aeb888c8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb888cc1c0"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb888cc348"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb888cc4d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2aeb888cc658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aeb888cc7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2aeb888b86c0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2aeb888b86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2aeb888b8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2aeb888bfaf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2aeb888bfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2aeb888bfe40"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2aeb888cb020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aeb888cb1a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2aeb888cb330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2aeb888cb4b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2aeb888cb640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aeb888cb7c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aeb888cb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2aeb889085e8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb889085e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aeb88908938"/>
        <function-ref name="getDSN" scoped="" ref="0x2aeb88908ac0"/>
        <function-ref name="setFCF" scoped="" ref="0x2aeb88908c48"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aeb88908dd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aeb888d6020"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aeb888d61a8"/>
        <function-ref name="setDSN" scoped="" ref="0x2aeb888d6330"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aeb888d64b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aeb888d6640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aeb888d67c8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aeb888d6950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aeb888d6ad8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aeb888d6c60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aeb888ce020"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb888ce1a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aeb888ce330"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aeb888ce4b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aeb888ce640"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aeb888ce7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb888ce950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aeb888cead8"/>
        <function-ref name="getFCF" scoped="" ref="0x2aeb888cec60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aeb888cede8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aeb88907020"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aeb889071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2aeb888bab40" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2aeb888bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2aeb888c7020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2aeb888c71a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2aeb888c7330"/>
        <function-ref name="getSender" scoped="" ref="0x2aeb888c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2aeb888dc0d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2aeb888dc0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2aeb888dc420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2aeb888dc5a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2aeb888dc730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2aeb888dc8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2aeb88977910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88977910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb88977c80"/>
        <function-ref name="wait" scoped="" ref="0x2aeb88977e08"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88979020"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb889791a8"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb88979330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aeb88979958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb88979958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aeb88258540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88996020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb889970c0"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb889979d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88997548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb889964a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb88998730"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88998c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2aeb89688388" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb89688388"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb896886f8"/>
        <function-ref name="wait" scoped="" ref="0x2aeb89688880"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89688a08"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb89688b90"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb89688d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aeb89687230" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb89687230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aeb88258540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb89684918"/>
        <function-ref name="fired" scoped="" ref="0x2aeb89686980"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb89684310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb89686e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb89684da0"/>
        <function-ref name="start" scoped="" ref="0x2aeb89686020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb896864f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aeb896831c0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aeb896831c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aeb89683510"/>
        <function-ref name="suspend" scoped="" ref="0x2aeb89683698"/>
        <function-ref name="resume" scoped="" ref="0x2aeb89683820"/>
        <function-ref name="run" scoped="" ref="0x2aeb896839a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2aeb88978220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aeb88978220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aeb88978570"/>
        <function-ref name="suspend" scoped="" ref="0x2aeb889786f8"/>
        <function-ref name="resume" scoped="" ref="0x2aeb88978880"/>
        <function-ref name="run" scoped="" ref="0x2aeb88978a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88a562a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88a562a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88a565f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88a56780"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88a56908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88a56b90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88a56b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88a55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aeb88a59020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88a59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb88a59390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb88a2d578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb88a2d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88a2d8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88a2da50"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88a2dbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88a2dd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88a5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb88a5b388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb88a5b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88a5b6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88a5b880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88a5ba08"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88a5bb90"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88a5bd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aeb88a5a7e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aeb88a5a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88a5ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88a574d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88a574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88a57820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88a579a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88a57b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88a57cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88a57e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88a56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88a552a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88a552a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb88a555f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2aeb88a55780"/>
        <function-ref name="source" scoped="" ref="0x2aeb88a55908"/>
        <function-ref name="destination" scoped="" ref="0x2aeb88a55a90"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb88a55c18"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb88a55da0"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb88a54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb88a5a0c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb88a5a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88a5a438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aeb88a59738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb88a59738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88a59aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb88a2e020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb88a2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb88a2e370"/>
        <function-ref name="source" scoped="" ref="0x2aeb88a2e4f8"/>
        <function-ref name="address" scoped="" ref="0x2aeb88a2e680"/>
        <function-ref name="destination" scoped="" ref="0x2aeb88a2e808"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb88a2e990"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb88a2eb18"/>
        <function-ref name="type" scoped="" ref="0x2aeb88a2eca0"/>
        <function-ref name="setType" scoped="" ref="0x2aeb88a2ee28"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb88a2d020"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb88a2d1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb88a2d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aeb88a59e50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb88a59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88a571e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb896c75b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb896c75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb896c7908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb89666ba0" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb89666ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb896c7020"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb896c71a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb896c7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aeb89668898" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aeb89668898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb89668c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb8966a060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb8966a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8966a3b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8966a538"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb8966a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8966a848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8966a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb8966ad38" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb8966ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb896690d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb89669260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb896693e8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89669570"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb896696f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aeb896681c0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aeb896681c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb89668530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb8966ebb0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb8966ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8966c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8966c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8966c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8966c4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb8966c640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb8966c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb896c7b90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb896c7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb896c6020"/>
        <function-ref name="checkFrame" scoped="" ref="0x2aeb896c61a8"/>
        <function-ref name="source" scoped="" ref="0x2aeb896c6330"/>
        <function-ref name="destination" scoped="" ref="0x2aeb896c64b8"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb896c6640"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb896c67c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb896c6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2aeb896c6b98" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb896c6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2aeb896c5020"/>
        <function-ref name="changed" scoped="" ref="0x2aeb896c51a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2aeb896c5330"/>
        <function-ref name="setAddress" scoped="" ref="0x2aeb896c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb89667d90" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb89667d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb89666170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb896662f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89666480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb89666608"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb89666790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb89666918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb89669a60" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb89669a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb89669dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aeb89667020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aeb89667020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb89667390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb8966ca10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb8966ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb8966cd60"/>
        <function-ref name="source" scoped="" ref="0x2aeb8966b020"/>
        <function-ref name="address" scoped="" ref="0x2aeb8966b1a8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb8966b330"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb8966b4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb8966b640"/>
        <function-ref name="type" scoped="" ref="0x2aeb8966b7c8"/>
        <function-ref name="setType" scoped="" ref="0x2aeb8966b950"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb8966bad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb8966bc60"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb8966bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aeb89667738" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aeb89667738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb89667aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2aeb88a16560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb88a16560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2aeb88a168b0"/>
        <function-ref name="changed" scoped="" ref="0x2aeb88a16a38"/>
        <function-ref name="amGroup" scoped="" ref="0x2aeb88a16bc0"/>
        <function-ref name="setAddress" scoped="" ref="0x2aeb88a16d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88a4ea48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88a4ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88a4ed98"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88a6f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88a6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2aeb88a6f3f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb88a6f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88a6f740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88a6f8c8"/>
        <function-ref name="request" scoped="" ref="0x2aeb88a6fa50"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88a6fbd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88a6fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aeb88a4e100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aeb88a4e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88a4e450"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88a4e5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88a4e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aeb88aa6510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb88aa6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aeb88aa6880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb88aa6a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb88aa5550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb88aa5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb88aa58c0"/>
        <function-ref name="configure" scoped="" ref="0x2aeb88aa5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb88aa7748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb88aa7748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88aa7ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88aa7c40"/>
        <function-ref name="request" scoped="" ref="0x2aeb88aa7dc8"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88aa6020"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88aa61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aeb88aa6c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb88aa6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb88aa5020"/>
        <function-ref name="userId" scoped="" ref="0x2aeb88aa51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb896d6438" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb896d6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb896d6788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2aeb896d6a10" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2aeb896d6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aeb896d6d60"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aeb896d5020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aeb896d51a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2aeb896d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aeb896d3698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb896d3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aeb896d3a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb896d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb896d26c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb896d26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb896d2a30"/>
        <function-ref name="configure" scoped="" ref="0x2aeb896d2bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2aeb896d2e40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aeb896d2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aeb896d01c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aeb896d0348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aeb896d04d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2aeb896d0658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb896d4918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb896d4918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb896d4c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb896d4e10"/>
        <function-ref name="request" scoped="" ref="0x2aeb896d3020"/>
        <function-ref name="granted" scoped="" ref="0x2aeb896d31a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb896d3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aeb896d3dd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb896d3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb896d2170"/>
        <function-ref name="userId" scoped="" ref="0x2aeb896d22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2aeb896d0920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2aeb896d0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb896d0c70"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb896d0df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88b030a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88b030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88b033f0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88b03578"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88b03700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88b03988" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88b03988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88b03cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aeb88ad7b50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aeb88ad7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aeb88ad5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb88ad3b38" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb88ad3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88ad8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88ad81a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88ad8330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88ad84b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88ad8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2aeb88b042e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88b042e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88b04630"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88b047b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88b04940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88b04ac8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88b04c50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88b04dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2aeb88ad52c8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb88ad52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aeb88ad5618"/>
        <function-ref name="getDSN" scoped="" ref="0x2aeb88ad57a0"/>
        <function-ref name="setFCF" scoped="" ref="0x2aeb88ad5928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aeb88ad5ab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aeb88ad5c38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aeb88ad5dc0"/>
        <function-ref name="setDSN" scoped="" ref="0x2aeb88b06020"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aeb88b061a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aeb88b06330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aeb88b064b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aeb88b06640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aeb88b067c8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aeb88b06950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aeb88b06bd8"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb88b06d60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aeb88b05020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aeb88b051a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aeb88b05330"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aeb88b054b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb88b05640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aeb88b057c8"/>
        <function-ref name="getFCF" scoped="" ref="0x2aeb88b05950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aeb88b05ad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aeb88b05c60"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aeb88b05de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2aeb88ad8888" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2aeb88ad8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88ad8bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb88ad8d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88ad7020"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88ad71a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88ad7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2aeb88ad75b8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2aeb88ad75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88ad7908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88b2d928" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88b2d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88b2dc78"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88b2de00"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88b2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88b2c2a8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88b2c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88b2c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aeb88b30c10" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb88b30c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88b2f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88b2f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88b2f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88b2f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88b2f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88b2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2aeb88b2e430" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2aeb88b2e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88b2e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88b2c880" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88b2c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88b2cbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88b2cd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88b2b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88b2b1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88b2b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88b2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2aeb88b2fa50" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2aeb88b2fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88b2fda0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88b2e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88b2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2aeb88afcd20" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2aeb88afcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88b300a0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88b30228"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88b303b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2aeb88b30638" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2aeb88b30638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88b30988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2aeb88b2ea08" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2aeb88b2ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88b2ed58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88b2d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88b2d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88b2d330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88b2d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88b2d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aeb88bd3900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb88bd3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2aeb88bd3c50"/>
        <function-ref name="address" scoped="" ref="0x2aeb88bd3dd8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb88bd2020"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb88bd21a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb88bd2330"/>
        <function-ref name="pan" scoped="" ref="0x2aeb88bd24b8"/>
        <function-ref name="setPan" scoped="" ref="0x2aeb88bd2640"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb88bd27c8"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb88bd2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88bd2b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88bd2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88bd1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88bd11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88bd1330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88bd14b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88bd1640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88bd17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2aeb88ba1980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb88ba1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aeb88ba1cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2aeb88ba1e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2aeb88bd5020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aeb88bd51a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aeb88bd5330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aeb88bd54b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2aeb88bd5640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aeb88bd57c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aeb88bd5950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aeb88bd5ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aeb88bd5c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aeb88bd5de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aeb88bd4020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aeb88bd42a8"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb88bd4430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aeb88bd45b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aeb88bd4740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aeb88bd48c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aeb88bd4a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb88bd4bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aeb88bd4d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2aeb88bd3020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aeb88bd31a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aeb88bd3330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aeb88bd34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88bd1ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88bd1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88bd1e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88bd0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88bd01a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88bd0330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88bd04b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88bd0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aeb8972fd98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aeb8972fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2aeb8972e170"/>
        <function-ref name="address" scoped="" ref="0x2aeb8972e2f8"/>
        <function-ref name="destination" scoped="" ref="0x2aeb8972e480"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb8972e608"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb8972e790"/>
        <function-ref name="pan" scoped="" ref="0x2aeb8972e918"/>
        <function-ref name="setPan" scoped="" ref="0x2aeb8972eaa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb8972ec28"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb8972edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb8972d020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb8972d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8972d370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8972d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8972d680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8972d808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb8972d990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb8972db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2aeb89735d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aeb89735d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aeb897310d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2aeb89731260"/>
        <function-ref name="setFCF" scoped="" ref="0x2aeb897313e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aeb89731570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aeb897316f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aeb89731880"/>
        <function-ref name="setDSN" scoped="" ref="0x2aeb89731a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aeb89731b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aeb89731d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aeb89730020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aeb897301a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aeb89730330"/>
        <function-ref name="localAddr" scoped="" ref="0x2aeb897304b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aeb89730740"/>
        <function-ref name="localPan" scoped="" ref="0x2aeb897308c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aeb89730a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aeb89730bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aeb89730d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aeb8972f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb8972f1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aeb8972f330"/>
        <function-ref name="getFCF" scoped="" ref="0x2aeb8972f4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aeb8972f640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aeb8972f7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aeb8972f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2aeb8972ddc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aeb8972ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2aeb8972b170"/>
        <function-ref name="changed" scoped="" ref="0x2aeb8972b2f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2aeb8972b480"/>
        <function-ref name="setAddress" scoped="" ref="0x2aeb8972b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb8972b890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb8972b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8972bbe0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8972bd68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8978d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8978d1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb8978d330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb8978d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88c41510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88c41510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88c41860"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88c419e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88c41b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88c41df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c41df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88c40170"/>
        <function-ref name="header" scoped="" ref="0x2aeb88c402f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb88c0d470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb88c0d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88c0d7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88c0d948"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88c0dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88c40580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88c40580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2aeb88c408d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2aeb88c40a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2aeb88c40be0"/>
        <function-ref name="getSender" scoped="" ref="0x2aeb88c40d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88c0dd18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88c0dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88c410a0"/>
        <function-ref name="header" scoped="" ref="0x2aeb88c41228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb897a5458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb897a5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb897a57a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb897a5930"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb897a5ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb897a5d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb897a5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb897a40d8"/>
        <function-ref name="header" scoped="" ref="0x2aeb897a4260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2aeb897a3bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb897a3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb897a2020"/>
        <function-ref name="clearAll" scoped="" ref="0x2aeb897a21a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb897a2330"/>
        <function-ref name="set" scoped="" ref="0x2aeb897a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb897aada0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb897aada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb897a6170"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb897a62f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb897a6480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2aeb897a3020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2aeb897a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2aeb897a3370"/>
        <function-ref name="insertNode" scoped="" ref="0x2aeb897a34f8"/>
        <function-ref name="getNode" scoped="" ref="0x2aeb897a3680"/>
        <function-ref name="evicted" scoped="" ref="0x2aeb897a3808"/>
        <function-ref name="getIndex" scoped="" ref="0x2aeb897a3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb897a66c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb897a66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb897a6a18"/>
        <function-ref name="header" scoped="" ref="0x2aeb897a6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb897a6de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb897a6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb897a5170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2aeb897a44a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2aeb897a44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2aeb897a47f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2aeb897a4980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2aeb897a4b08"/>
        <function-ref name="getSender" scoped="" ref="0x2aeb897a4c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2aeb88c0ad58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2aeb88c0ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2aeb88c070d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2aeb88c07260"/>
        <function-ref name="getNode" scoped="" ref="0x2aeb88c073e8"/>
        <function-ref name="evicted" scoped="" ref="0x2aeb88c07570"/>
        <function-ref name="getIndex" scoped="" ref="0x2aeb88c076f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2aeb88c03b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb88c03b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88c03e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2aeb88c02020"/>
        <function-ref name="get" scoped="" ref="0x2aeb88c021a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88c02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2aeb88c04850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2aeb88c04850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2aeb88c04ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2aeb88c04d28"/>
        <function-ref name="getNode" scoped="" ref="0x2aeb88c03020"/>
        <function-ref name="evicted" scoped="" ref="0x2aeb88c031a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2aeb88c03330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb88c04238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb88c04238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88c04588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2aeb897a0140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aeb897a0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb897a0490"/>
        <function-ref name="clearAll" scoped="" ref="0x2aeb897a0618"/>
        <function-ref name="get" scoped="" ref="0x2aeb897a07a0"/>
        <function-ref name="set" scoped="" ref="0x2aeb897a0928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88c30c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88c30c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88c2f020"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88c2f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88c2f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88c2f5b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c2f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88c2f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2aeb88c2c100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2aeb88c2c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb88c2c450"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb88c2c5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb88c2c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb88c332e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb88c332e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88c33638"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88c337c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88c33948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88c32e20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88c32e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88c301a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88c30330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88c304b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88c30640"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88c307c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88c30950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88c2fb90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88c2fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88c2e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88c2e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88c2e330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88c2e4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88c2e640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88c2e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2aeb88c2d470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2aeb88c2d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aeb88c2d7c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2aeb88c2d948"/>
        <function-ref name="getRetries" scoped="" ref="0x2aeb88c2dad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aeb88c2dc58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aeb88c2dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb88c33bd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb88c33bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88c32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2aeb88c2ea10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb88c2ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb88c2ed60"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb88c2d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb88c2d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aeb88c32268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aeb88c32268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aeb88c325b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2aeb88c32740"/>
        <function-ref name="getRetries" scoped="" ref="0x2aeb88c328c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aeb88c32a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aeb88c32bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb88c27988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb88c27988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88c27cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88c27e60"/>
        <function-ref name="start" scoped="" ref="0x2aeb88c4a020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88c4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88c475c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88c475c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88c47918"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88c47aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88c47c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88c46020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88c46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88c46370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb88c4a430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb88c4a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88c4a780"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88c4a908"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88c4aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88c492e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88c492e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88c49638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88c497c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88c49948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88c49ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88c49c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88c49de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aeb88c48060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb88c48060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aeb88c483b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aeb88c48538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aeb88c486c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aeb88c48848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aeb88c48b30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aeb88c48b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88c48e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88c47030"/>
        <function-ref name="start" scoped="" ref="0x2aeb88c471b8"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88c47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb88c4ad18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb88c4ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88c490a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88c465f8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88c465f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88c46948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88c46ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88c46c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88c46de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88c44020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88c441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aeb897e2458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aeb897e2458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aeb897e27a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aeb897e2930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aeb897e2ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aeb897e2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb88cba270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb88cba270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88cba5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88cba748"/>
        <function-ref name="start" scoped="" ref="0x2aeb88cba8d0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88cbaa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2aeb88cb75d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aeb88cb75d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88cb7928"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88cb7ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88cb7c38"/>
        <function-ref name="done" scoped="" ref="0x2aeb88cb7dc0"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88cb6020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88cb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb88cbace0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb88cbace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88cb90a0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88cb9228"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88cb93b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2aeb88cb6c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88cb6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88cb5020"/>
        <function-ref name="header" scoped="" ref="0x2aeb88cb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb88cb9638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb88cb9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88cb9988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2aeb88cb63f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88cb63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88cb6740"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88cb68c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88cb6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aeb88cb9bd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aeb88cb9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aeb88cb7020"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88cb71a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88cb7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb897da870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb897da870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb897dabc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb897dad48"/>
        <function-ref name="start" scoped="" ref="0x2aeb897d9020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb897d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2aeb897d9430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb897d9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb897d9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2aeb897d7450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aeb897d7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb897d77a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb897d7928"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb897d7ab0"/>
        <function-ref name="done" scoped="" ref="0x2aeb897d7c38"/>
        <function-ref name="standby" scoped="" ref="0x2aeb897d7dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb897d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb897d9a08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb897d9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb897d9d58"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb897d8020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb897d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2aeb897d34f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2aeb897d34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb897d3840"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb897d39c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2aeb897d5578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb897d5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb897d58c8"/>
        <function-ref name="header" scoped="" ref="0x2aeb897d5a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2aeb897d3c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2aeb897d3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb897d2020"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb897d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aeb897d8430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aeb897d8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb897d8780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2aeb897d5d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2aeb897d5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb897d30a0"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb897d3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2aeb897d6c98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb897d6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb897d5020"/>
        <function-ref name="ready" scoped="" ref="0x2aeb897d51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb897d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aeb897d89c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aeb897d89c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aeb897d8d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb897d7020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb897d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aeb897d6268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aeb897d6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aeb897d65b8"/>
        <function-ref name="suspend" scoped="" ref="0x2aeb897d6740"/>
        <function-ref name="resume" scoped="" ref="0x2aeb897d68c8"/>
        <function-ref name="run" scoped="" ref="0x2aeb897d6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88d0f0c0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88d0f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d0f410"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88d0f598"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d0f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88d0f9a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d0f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d0fcf8"/>
        <function-ref name="header" scoped="" ref="0x2aeb88d0fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aeb88d0d0f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88d0d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb88d0d440"/>
        <function-ref name="wait" scoped="" ref="0x2aeb88d0d5c8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88d0d750"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb88d0d8d8"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb88d0da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88d0dce8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88d0dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2aeb88d0c0a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2aeb88d0c228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2aeb88d0c3b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2aeb88d0c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88d108c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d108c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d10c18"/>
        <function-ref name="header" scoped="" ref="0x2aeb88d10da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb88d10020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d10370"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88d104f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d10680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb89802d38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb89802d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb898010d8"/>
        <function-ref name="ready" scoped="" ref="0x2aeb89801260"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb898013e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb89801670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb89801670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb898019c0"/>
        <function-ref name="header" scoped="" ref="0x2aeb89801b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aeb89801d90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb89801d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb89800170"/>
        <function-ref name="wait" scoped="" ref="0x2aeb898002f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89800480"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb89800608"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb89800790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2aeb898009d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2aeb898009d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2aeb89800d28"/>
        <function-ref name="rand32" scoped="" ref="0x2aeb897ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb897ff2a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb897ff2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2aeb897ff5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2aeb897ff780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2aeb897ff908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2aeb897ffa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb89802578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb89802578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb898028c8"/>
        <function-ref name="header" scoped="" ref="0x2aeb89802a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb89804b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb89804b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb89802020"/>
        <function-ref name="ready" scoped="" ref="0x2aeb898021a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb89802330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2aeb897ffd58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2aeb897ffd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb897fd0d8"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb897fd260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2aeb88d24690" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2aeb88d24690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2aeb88d249e0"/>
        <function-ref name="rand32" scoped="" ref="0x2aeb88d24b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2aeb88d22668" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2aeb88d22668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88d241e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb88cee930" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb88cee930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88ceec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2aeb88d1d4c8" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2aeb88d1d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2aeb88d1d818"/>
        <function-ref name="rand32" scoped="" ref="0x2aeb88d1d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2aeb88d1e3b0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2aeb88d1e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88d1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb88d21b30" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb88d21b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88d21e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88d53d38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88d53d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d520d8"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88d52260"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d523e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88d52670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d529c0"/>
        <function-ref name="header" scoped="" ref="0x2aeb88d52b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aeb88d52d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88d52d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb88d51170"/>
        <function-ref name="wait" scoped="" ref="0x2aeb88d512f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88d51480"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb88d51608"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb88d51790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2aeb88d50bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2aeb88d50bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88d4f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb88d4f1a8"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88d4f330"/>
        <function-ref name="set" scoped="" ref="0x2aeb88d4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88d51a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88d51a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2aeb88d51d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2aeb88d50020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aeb88d501a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2aeb88d50330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2aeb88d504b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2aeb88d50640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aeb88d507c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aeb88d50950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88d41b50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d41b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d53020"/>
        <function-ref name="header" scoped="" ref="0x2aeb88d531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb88d412a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d412a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d415f8"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88d41780"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d41908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aeb88d533f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aeb88d533f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb88d53740"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb88d538c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb88d53a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb88d73978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb88d73978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88d73cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88d73e50"/>
        <function-ref name="start" scoped="" ref="0x2aeb88d72020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88d721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aeb88d6f020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88d6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aeb88d6f370"/>
        <function-ref name="request" scoped="" ref="0x2aeb88d6f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88d6a5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88d6a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d6a908"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88d6aa90"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d6ac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88d69020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88d69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d69370"/>
        <function-ref name="header" scoped="" ref="0x2aeb88d694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aeb88d71268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aeb88d71268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88d715b8"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88d71740"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88d718c8"/>
        <function-ref name="done" scoped="" ref="0x2aeb88d71a50"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88d71bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88d71d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88d6f740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88d6f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88d6fa90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88d6fc18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88d6fda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88d6e020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88d6e1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88d6e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2aeb88d6b638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2aeb88d6b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88d6ba88"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88d6bc10"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88d6bd98"/>
        <function-ref name="done" scoped="" ref="0x2aeb88d6a020"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88d6a1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88d6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2aeb88d6e5b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aeb88d6e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aeb88d6e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88d708c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88d708c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d70c18"/>
        <function-ref name="header" scoped="" ref="0x2aeb88d70da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2aeb88d6b060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2aeb88d6b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d6b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aeb88d6ebf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aeb88d6ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88d6c020"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88d6c1a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb88d6c330"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88d6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88d68020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88d68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88d68370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88d684f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88d68680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88d68808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88d68990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88d68b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2aeb88d72c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2aeb88d72c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88d71020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88d68da0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88d68da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aeb88d67170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2aeb88d6c740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2aeb88d6c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d6ca90"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88d6cc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d6cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb88d70020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88d70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d70370"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88d704f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d70680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2aeb88d69780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2aeb88d69780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aeb88d69ad0"/>
        <function-ref name="request" scoped="" ref="0x2aeb88d69c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aeb88d723f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aeb88d723f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88d72740"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88d728c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88d72a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2aeb88dbb8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2aeb88dbb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88dbbc18"/>
        <function-ref name="get" scoped="" ref="0x2aeb88dbbda0"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88dba020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88dba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88dbf9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dbf9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88dbfd48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88dbd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88dbd1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88dbd330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88dbd4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88dbd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88dbc9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88dbc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88dbcd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88dbb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88dbb1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88dbb330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88dbb4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88dbb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aeb88dc1020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb88dc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb88dc0478"/>
        <function-ref name="clear" scoped="" ref="0x2aeb88dc0b58"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb88dc1d70"/>
        <function-ref name="set" scoped="" ref="0x2aeb88dbf278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2aeb88dbda30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88dbda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb88dbc5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aeb88dc5270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb88dc5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb88dc4700"/>
        <function-ref name="clear" scoped="" ref="0x2aeb88dc4de0"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb88dc4020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88dc24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2aeb8988ee60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2aeb8988ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8988d1e8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8988d370"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb8988d4f8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8988d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb8988e080" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb8988e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8988e3d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb8988e558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8988e6e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb8988e868"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb8988e9f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb8988eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb8988aac0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb8988aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb8988ae10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb89889020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb898891a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb89889330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb898894b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb89889640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aeb89892660" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aeb89892660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb89891ad0"/>
        <function-ref name="clear" scoped="" ref="0x2aeb8988f1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb898913f0"/>
        <function-ref name="set" scoped="" ref="0x2aeb8988f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2aeb8988da10" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb8988da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb8988c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2aeb8988caf8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2aeb8988caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb8988a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aeb89895958" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aeb89895958"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb89894e10"/>
        <function-ref name="clear" scoped="" ref="0x2aeb89893558"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb89894730"/>
        <function-ref name="set" scoped="" ref="0x2aeb89893c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb88dcbdc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb88dcbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb8816e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb8816e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb88dc8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88e130e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88e130e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e13430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88e135b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e13740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88e138c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e13a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e13bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88e12020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e12370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88e124f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e12680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88e12808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e12990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e12b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2aeb88df3660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2aeb88df3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88df39d0"/>
        <function-ref name="get" scoped="" ref="0x2aeb88df3b58"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88df3ce0"/>
        <function-ref name="set" scoped="" ref="0x2aeb88df3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aeb88e0fb78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aeb88e0fb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88e0e020"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88e0e1a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb88e0e330"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88e0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aeb88e0b3f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88e0b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aeb88e0b740"/>
        <function-ref name="request" scoped="" ref="0x2aeb88e0b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aeb88e068c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aeb88e068c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88e06c18"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88e06da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88e05020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aeb88e052a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aeb88e052a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88e055f8"/>
        <function-ref name="header" scoped="" ref="0x2aeb88e05780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aeb88e0d5b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aeb88e0d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88e0d908"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88e0da90"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88e0dc18"/>
        <function-ref name="done" scoped="" ref="0x2aeb88e0dda0"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88e0c020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88e0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88e0bb10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88e0bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e0be60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88e0a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e0a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88e0a330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e0a4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e0a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2aeb88e07a08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2aeb88e07a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88e07e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88e06020"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88e061a8"/>
        <function-ref name="done" scoped="" ref="0x2aeb88e06330"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88e064b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88e06640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2aeb88e0a8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aeb88e0a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aeb88e0ac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88e0cc98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88e0cc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88e0b020"/>
        <function-ref name="header" scoped="" ref="0x2aeb88e0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2aeb88e07430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2aeb88e07430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88e07780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aeb88e09020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aeb88e09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aeb88e09370"/>
        <function-ref name="stopDone" scoped="" ref="0x2aeb88e094f8"/>
        <function-ref name="start" scoped="" ref="0x2aeb88e09680"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88e09808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aeb88e042a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aeb88e042a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e045f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88e04780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e04908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88e04a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e04c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e04da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2aeb88e0d020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2aeb88e0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88e0d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88e03060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88e03060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aeb88e033b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2aeb88e09a90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2aeb88e09a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88e09de0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88e07020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88e071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb88e0c3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88e0c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88e0c740"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88e0c8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88e0ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2aeb88e05a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2aeb88e05a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aeb88e05d58"/>
        <function-ref name="request" scoped="" ref="0x2aeb88e04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aeb88e0e700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aeb88e0e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88e0ea50"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88e0ebd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88e0ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aeb88dfb448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88dfb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aeb88dfb798"/>
        <function-ref name="request" scoped="" ref="0x2aeb88dfb920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aeb88e340c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88e340c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e326a0"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e32190"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e34c48"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e32bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2aeb88e1f020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2aeb88e1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e1f370"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e1f4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88e1f680"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e1f808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2aeb88e24730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88e24730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb88e23c58"/>
        <function-ref name="clear" scoped="" ref="0x2aeb88e21380"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb88e23578"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e21a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aeb88dff3e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aeb88dff3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88dff730"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88dff8b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88dffa40"/>
        <function-ref name="done" scoped="" ref="0x2aeb88dffbc8"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88dffd50"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88dfc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aeb88e1e768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88e1e768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb88e1eab8"/>
        <function-ref name="wait" scoped="" ref="0x2aeb88e1ec40"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88e1edc8"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb88e1c020"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb88e1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aeb88dfacd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88dfacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e35388"/>
        <function-ref name="get" scoped="" ref="0x2aeb88df9e00"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88df98f0"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e35898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88dfbbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88dfbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88dfa020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88dfa1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88dfa330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88dfa4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88dfa640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88dfa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88e255c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88e255c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e25a18"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e25ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e25d28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2aeb88e24020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aeb88e241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88dfcbf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88dfcbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88dfb020"/>
        <function-ref name="header" scoped="" ref="0x2aeb88dfb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb88e294b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb88e294b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aeb88258540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88e26b18"/>
        <function-ref name="fired" scoped="" ref="0x2aeb88e28b90"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb88e26510"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88e26088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb88e25020"/>
        <function-ref name="start" scoped="" ref="0x2aeb88e28230"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88e28708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2aeb88e31458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aeb88e31458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e30a40"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e30530"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e30020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aeb88e2a220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88e2a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb88e2ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb88dfc2c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88dfc2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88dfc618"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88dfc7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88dfc928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aeb88e2e860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88e2e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e2de30"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e2d920"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e2d410"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e2b388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2aeb88e1fb78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aeb88e1fb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e1e020"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e1e1a8"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88e1e330"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e1e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2aeb88e20378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aeb88e20378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e206c8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e20850"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88e209d8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e20b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aeb88e2b9d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb88e2b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aeb88e2bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aeb88e522c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aeb88e522c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aeb88e52610"/>
        <function-ref name="request" scoped="" ref="0x2aeb88e52798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2aeb88e39368" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2aeb88e39368"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2aeb88e380f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aeb88e4d020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aeb88e4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e4b608"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e4b0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e4dba0"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e4bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2aeb88e72368" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2aeb88e72368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e726b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e72840"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88e729c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e72b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2aeb88e55bf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb88e55bf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88e54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2aeb88e71d90" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aeb88e71d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aeb88e6e4f8"/>
        <function-ref name="clear" scoped="" ref="0x2aeb88e6ebd8"/>
        <function-ref name="isValid" scoped="" ref="0x2aeb88e70de8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e6d300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2aeb88e40e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2aeb88e40e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88e3f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88e3f370"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88e3f4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88e3f680"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e3f808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88e3f990"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e3fb18"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88e3fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aeb88e6c5e0" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aeb88e6c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aeb88e6c930"/>
        <function-ref name="wait" scoped="" ref="0x2aeb88e6cab8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb88e6cc40"/>
        <function-ref name="isFree" scoped="" ref="0x2aeb88e6cdc8"/>
        <function-ref name="getNow" scoped="" ref="0x2aeb88e6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aeb88e542d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aeb88e542d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aeb88e54620"/>
        <function-ref name="turnOn" scoped="" ref="0x2aeb88e547a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aeb88e54930"/>
        <function-ref name="done" scoped="" ref="0x2aeb88e54ab8"/>
        <function-ref name="standby" scoped="" ref="0x2aeb88e54c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2aeb88e54dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2aeb88e386c8" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb88e386c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb88e743a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aeb88e51b48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aeb88e51b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e4e190"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e4fc38"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e4f728"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e4e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aeb88e52a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aeb88e52a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e52da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb88e51020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e511a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb88e51330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e514b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e51640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2aeb88e3bd00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2aeb88e3bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88e400a0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88e40228"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88e403b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88e40538"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e406c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88e40848"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e409d0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88e40b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aeb88e748b0" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aeb88e748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb88e74c00"/>
        <function-ref name="headerLength" scoped="" ref="0x2aeb88e74d88"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aeb88e73020"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2aeb88e731a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aeb88e73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aeb88e539e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aeb88e539e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aeb88e53d38"/>
        <function-ref name="header" scoped="" ref="0x2aeb88e52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2aeb88ee37d0" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2aeb88ee37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb88ee3b20"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb88ee3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2aeb88e4a3b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aeb88e4a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e49a40"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e49530"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e49020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aeb88e55138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88e55138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aeb880eb6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88e55488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2aeb88e424f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2aeb88e424f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88e42848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88e429d0"/>
        <function-ref name="request" scoped="" ref="0x2aeb88e42b58"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88e42ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88e42e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2aeb88e43130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2aeb88e43130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88e43580"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88e43708"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88e43890"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88e43a18"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e43ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88e43d28"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e42020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88e421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aeb88e47860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aeb88e47860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e46e30"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e46920"/>
        <function-ref name="isSet" scoped="" ref="0x2aeb88e46410"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e44388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aeb88e530c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aeb88e530c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88e53410"/>
        <function-ref name="ready" scoped="" ref="0x2aeb88e53598"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88e53720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2aeb88e365e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2aeb88e365e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2aeb88e36938"/>
        <function-ref name="disable" scoped="" ref="0x2aeb88e36ac0"/>
        <function-ref name="captured" scoped="" ref="0x2aeb88e36c48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2aeb88e36dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2aeb88e3b1f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88e3b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2aeb88e3b540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2aeb88e3b6c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2aeb88e3b850"/>
        <function-ref name="write" scoped="" ref="0x2aeb88e3b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2aeb88e71020" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aeb88e71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e71370"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e714f8"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88e71680"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e71808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2aeb88e736d0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aeb88e736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb88e73a20"/>
        <function-ref name="get" scoped="" ref="0x2aeb88e73ba8"/>
        <function-ref name="setValue" scoped="" ref="0x2aeb88e73d30"/>
        <function-ref name="set" scoped="" ref="0x2aeb88e72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aeb88e449d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aeb88e449d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aeb88e44d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aeb88e6dac8" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aeb88e6dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aeb88e6de18"/>
        <function-ref name="suspend" scoped="" ref="0x2aeb88e6c020"/>
        <function-ref name="resume" scoped="" ref="0x2aeb88e6c1a8"/>
        <function-ref name="run" scoped="" ref="0x2aeb88e6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2aeb88f244c0" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2aeb88f244c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88f24810"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88f24998"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88f24b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88f24ca8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88f24e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88f23020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88f231a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88f23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2aeb88f25348" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2aeb88f25348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88f25698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88f25820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88f259a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88f25b30"/>
        <function-ref name="get" scoped="" ref="0x2aeb88f25cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88f25e40"/>
        <function-ref name="set" scoped="" ref="0x2aeb88f24020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88f241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb88f22418" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb88f22418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb88f1fab0"/>
        <function-ref name="fired" scoped="" ref="0x2aeb88f21af0"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb88f1f4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb88f1f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb88f1e020"/>
        <function-ref name="start" scoped="" ref="0x2aeb88f21190"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88f21668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2aeb88f27b18" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2aeb88f27b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88f27e68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88f26020"/>
        <function-ref name="request" scoped="" ref="0x2aeb88f261a8"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88f26330"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88f264b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2aeb88f2a900" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2aeb88f2a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88f2ac50"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88f2add8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88f27020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88f271a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88f27330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88f274b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88f27640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88f277c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2aeb88f23648" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2aeb88f23648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2aeb88f23998"/>
        <function-ref name="disable" scoped="" ref="0x2aeb88f23b20"/>
        <function-ref name="captured" scoped="" ref="0x2aeb88f23ca8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2aeb88f23e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2aeb88f26770" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f26770"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2aeb88f26ac0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2aeb88f26c48"/>
        <function-ref name="splitRead" scoped="" ref="0x2aeb88f26dd0"/>
        <function-ref name="write" scoped="" ref="0x2aeb88f25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aeb88f1e670" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aeb88f1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TRadio" ref="0x2aeb88258140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb88f1d220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2aeb88f51e50" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2aeb88f51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88f501e8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88f50370"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88f504f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88f50680"/>
        <function-ref name="get" scoped="" ref="0x2aeb88f50808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88f50990"/>
        <function-ref name="set" scoped="" ref="0x2aeb88f50b18"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88f50ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2aeb88f537f0" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2aeb88f537f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2aeb88f51930"/>
        <function-ref name="test" scoped="" ref="0x2aeb88f51020"/>
        <function-ref name="get" scoped="" ref="0x2aeb88f5a3a8"/>
        <function-ref name="captured" scoped="" ref="0x2aeb88f5ad08"/>
        <function-ref name="reset" scoped="" ref="0x2aeb88f59238"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb88f514a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88f5a830"/>
        <function-ref name="start" scoped="" ref="0x2aeb88f596c0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88f59b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2aeb88f4f020" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2aeb88f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88f4f370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88f4f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88f4f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88f4f808"/>
        <function-ref name="get" scoped="" ref="0x2aeb88f4f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88f4fb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb88f4fca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88f4fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aeb88f1ab40" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb88f1ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88f19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2aeb88f1a020" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2aeb88f1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2aeb88f1a370"/>
        <function-ref name="disable" scoped="" ref="0x2aeb88f1a4f8"/>
        <function-ref name="captured" scoped="" ref="0x2aeb88f1a680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2aeb88f1a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2aeb88f79480" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2aeb88f79480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88f797d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88f79958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2aeb88f3d5f8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2aeb88f3d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2aeb88f3d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb88f41020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb88f41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88f41370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2aeb88f3dc40" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f3dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2aeb88f3f020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2aeb88f3f1a8"/>
        <function-ref name="splitRead" scoped="" ref="0x2aeb88f3f330"/>
        <function-ref name="write" scoped="" ref="0x2aeb88f3f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb88f3e1c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb88f3e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88f3e518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88f3e6a0"/>
        <function-ref name="request" scoped="" ref="0x2aeb88f3e828"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88f3e9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88f3eb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2aeb88fbe830" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2aeb88fbe830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb88fbeb80"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb88fbed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2aeb88f75450" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2aeb88f75450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb88f757a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb88f75928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2aeb88f9c888" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2aeb88f9c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88f9cbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88f9cd60"/>
        <function-ref name="request" scoped="" ref="0x2aeb88f9b020"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88f9b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88f9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2aeb88f76330" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2aeb88f76330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2aeb88f76680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb88f7ad10" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb88f7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb88f760a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2aeb88f9d5a8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2aeb88f9d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2aeb88f9d8f8"/>
        <function-ref name="sleep" scoped="" ref="0x2aeb88f71de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2aeb88f9dc08"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb88f9c020"/>
        <function-ref name="initMaster" scoped="" ref="0x2aeb88f72020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2aeb88f721a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2aeb88f72330"/>
        <function-ref name="read" scoped="" ref="0x2aeb88f724b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2aeb88f72640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2aeb88f727c8"/>
        <function-ref name="setClock" scoped="" ref="0x2aeb88f72950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aeb88f72ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2aeb88f72c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2aeb88f71020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2aeb88f711a8"/>
        <function-ref name="write" scoped="" ref="0x2aeb88f71330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2aeb88f714b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2aeb88f71640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2aeb88f717c8"/>
        <function-ref name="getClock" scoped="" ref="0x2aeb88f71950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2aeb88f71ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2aeb88f9da80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2aeb88f9dd90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2aeb88f71c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2aeb88f76938" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2aeb88f76938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2aeb88f76c88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2aeb88f76e10"/>
        <function-ref name="splitRead" scoped="" ref="0x2aeb88f75020"/>
        <function-ref name="write" scoped="" ref="0x2aeb88f751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb88f741c8" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb88f741c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb88f74518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb88f746a0"/>
        <function-ref name="request" scoped="" ref="0x2aeb88f74828"/>
        <function-ref name="granted" scoped="" ref="0x2aeb88f749b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb88f74b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2aeb88f9b5e8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb88f9b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb88f9b938"/>
        <function-ref name="userId" scoped="" ref="0x2aeb88f9bac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aeb88f9bd90" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aeb88f9bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aeb88f9a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2aeb88fd8020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2aeb88fd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2aeb88fd8370"/>
        <function-ref name="sleep" scoped="" ref="0x2aeb88fd67c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2aeb88fd8680"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb88fd6950"/>
        <function-ref name="initMaster" scoped="" ref="0x2aeb88fd8990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2aeb88fd8b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2aeb88fd8ca0"/>
        <function-ref name="read" scoped="" ref="0x2aeb88fd8e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2aeb88fd7020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2aeb88fd71a8"/>
        <function-ref name="setClock" scoped="" ref="0x2aeb88fd7330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aeb88fd74b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2aeb88fd7640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2aeb88fd78c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2aeb88fd7a50"/>
        <function-ref name="write" scoped="" ref="0x2aeb88fd7bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2aeb88fd7d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2aeb88fd6020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2aeb88fd61a8"/>
        <function-ref name="getClock" scoped="" ref="0x2aeb88fd6330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2aeb88fd64b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2aeb88fd84f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2aeb88fd8808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2aeb88fd6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2aeb88fcb7d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2aeb88fcb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88fcbb20"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88fcbca8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88fcbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88fca020"/>
        <function-ref name="get" scoped="" ref="0x2aeb88fca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88fca330"/>
        <function-ref name="set" scoped="" ref="0x2aeb88fca4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88fca640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2aeb88fcd4c0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2aeb88fcd4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88fcd810"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88fcd998"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88fcdb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88fcdca8"/>
        <function-ref name="get" scoped="" ref="0x2aeb88fcde30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88fcc020"/>
        <function-ref name="set" scoped="" ref="0x2aeb88fcc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88fcc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2aeb88fcf380" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2aeb88fcf380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88fcf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88fcf858"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88fcf9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88fcfb68"/>
        <function-ref name="get" scoped="" ref="0x2aeb88fcfcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88fcfe78"/>
        <function-ref name="set" scoped="" ref="0x2aeb88fcd030"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88fcd1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2aeb88fd0ae8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2aeb88fd0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aeb88fd0e38"/>
        <function-ref name="stop" scoped="" ref="0x2aeb88fcf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2aeb88fca970" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2aeb88fca970"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aeb88fcacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2aeb88fd5dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2aeb88fd5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2aeb88fd2170"/>
        <function-ref name="sleep" scoped="" ref="0x2aeb88fd0640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2aeb88fd2480"/>
        <function-ref name="dataReady" scoped="" ref="0x2aeb88fd07c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2aeb88fd2790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2aeb88fd2918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2aeb88fd2aa0"/>
        <function-ref name="read" scoped="" ref="0x2aeb88fd2c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2aeb88fd2db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2aeb88fd1020"/>
        <function-ref name="setClock" scoped="" ref="0x2aeb88fd11a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aeb88fd1330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2aeb88fd14b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2aeb88fd1740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2aeb88fd18c8"/>
        <function-ref name="write" scoped="" ref="0x2aeb88fd1a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2aeb88fd1bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2aeb88fd1d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2aeb88fd0020"/>
        <function-ref name="getClock" scoped="" ref="0x2aeb88fd01a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2aeb88fd0330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2aeb88fd22f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2aeb88fd2608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2aeb88fd04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2aeb88fcc648" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2aeb88fcc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb88fcc998"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb88fccb20"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb88fccca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb88fcce30"/>
        <function-ref name="get" scoped="" ref="0x2aeb88fcb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb88fcb1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb88fcb330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb88fcb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aeb8900e9a8" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb8900e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aeb8900ed18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb8900d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb8900dae8" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb8900dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb8900de58"/>
        <function-ref name="configure" scoped="" ref="0x2aeb8900c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb89010b50" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb89010b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb8900e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb8900e1a8"/>
        <function-ref name="request" scoped="" ref="0x2aeb8900e330"/>
        <function-ref name="granted" scoped="" ref="0x2aeb8900e4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb8900e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aeb8900d268" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb8900d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb8900d5b8"/>
        <function-ref name="userId" scoped="" ref="0x2aeb8900d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb898aa550" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb898aa550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb898aa8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2aeb898aab28" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2aeb898aab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aeb898aae78"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aeb898a8030"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aeb898a81b8"/>
        <function-ref name="dequeue" scoped="" ref="0x2aeb898a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aeb898a6698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aeb898a6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aeb898a6a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aeb898a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aeb898a56c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aeb898a56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aeb898a5a30"/>
        <function-ref name="configure" scoped="" ref="0x2aeb898a5bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2aeb898a5e40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aeb898a5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aeb898a41c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aeb898a4348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aeb898a44d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2aeb898a4658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aeb898a7918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aeb898a7918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aeb898a7c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aeb898a7e10"/>
        <function-ref name="request" scoped="" ref="0x2aeb898a6020"/>
        <function-ref name="granted" scoped="" ref="0x2aeb898a61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aeb898a6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aeb898a6dd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aeb898a6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aeb898a5170"/>
        <function-ref name="userId" scoped="" ref="0x2aeb898a52f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2aeb898a4920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2aeb898a4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb898a4c70"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb898a4df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2aeb8903b910" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb8903b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2aeb8903bc60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb8903bde8"/>
        <function-ref name="getControlA" scoped="" ref="0x2aeb89043020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb890431a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb89043330"/>
        <function-ref name="setControlB" scoped="" ref="0x2aeb890434b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb89043640"/>
        <function-ref name="getControlB" scoped="" ref="0x2aeb890437c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2aeb89043950"/>
        <function-ref name="setControlA" scoped="" ref="0x2aeb89043ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aeb89042020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2aeb89042020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2aeb89036270"/>
        <function-ref name="test" scoped="" ref="0x2aeb89038930"/>
        <function-ref name="get" scoped="" ref="0x2aeb89042ba0"/>
        <function-ref name="captured" scoped="" ref="0x2aeb89039560"/>
        <function-ref name="reset" scoped="" ref="0x2aeb89039a38"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb89038db8"/>
        <function-ref name="set" scoped="" ref="0x2aeb89039088"/>
        <function-ref name="start" scoped="" ref="0x2aeb89038020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb890384a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aeb89036e18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb89036e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb89033798"/>
        <function-ref name="fired" scoped="" ref="0x2aeb890344f8"/>
        <function-ref name="get" scoped="" ref="0x2aeb89035a18"/>
        <function-ref name="reset" scoped="" ref="0x2aeb89034980"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb89033c20"/>
        <function-ref name="set" scoped="" ref="0x2aeb89034020"/>
        <function-ref name="start" scoped="" ref="0x2aeb89034e08"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89033310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb8904bd00" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb8904bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb89045e20"/>
        <function-ref name="test" scoped="" ref="0x2aeb89045510"/>
        <function-ref name="get" scoped="" ref="0x2aeb890488f0"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb89044310"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb890447e8"/>
        <function-ref name="reset" scoped="" ref="0x2aeb89047738"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb890472b0"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb89045998"/>
        <function-ref name="set" scoped="" ref="0x2aeb89048d78"/>
        <function-ref name="start" scoped="" ref="0x2aeb89047bc0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89045088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2aeb89070160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb89070160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2aeb890704b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb89070638"/>
        <function-ref name="getControlA" scoped="" ref="0x2aeb890707c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb89070948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb89070ad0"/>
        <function-ref name="setControlB" scoped="" ref="0x2aeb89070c58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb89070de0"/>
        <function-ref name="getControlB" scoped="" ref="0x2aeb8906f020"/>
        <function-ref name="setControlC" scoped="" ref="0x2aeb8906f1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2aeb8906f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2aeb8906a020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2aeb8906a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb890677a8"/>
        <function-ref name="fired" scoped="" ref="0x2aeb89068560"/>
        <function-ref name="get" scoped="" ref="0x2aeb8906aba0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb890689e8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb89067c30"/>
        <function-ref name="set" scoped="" ref="0x2aeb89068088"/>
        <function-ref name="start" scoped="" ref="0x2aeb89068e70"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89067320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aeb8906f808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2aeb8906f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2aeb8906b930"/>
        <function-ref name="test" scoped="" ref="0x2aeb8906b020"/>
        <function-ref name="get" scoped="" ref="0x2aeb8906e3c8"/>
        <function-ref name="captured" scoped="" ref="0x2aeb8906ed28"/>
        <function-ref name="reset" scoped="" ref="0x2aeb8906c238"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb8906b4a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8906e850"/>
        <function-ref name="start" scoped="" ref="0x2aeb8906c6c0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8906cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2aeb89066360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2aeb89066360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb89063c20"/>
        <function-ref name="fired" scoped="" ref="0x2aeb89065980"/>
        <function-ref name="get" scoped="" ref="0x2aeb89065020"/>
        <function-ref name="reset" scoped="" ref="0x2aeb89065e08"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb890620f8"/>
        <function-ref name="set" scoped="" ref="0x2aeb890654a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb89063310"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89063798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2aeb89062770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2aeb89062770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb8905e020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb89061d08"/>
        <function-ref name="get" scoped="" ref="0x2aeb890613a8"/>
        <function-ref name="reset" scoped="" ref="0x2aeb8905f1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb8905e4a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb89061830"/>
        <function-ref name="start" scoped="" ref="0x2aeb8905f680"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8905fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb8902e180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb8902e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb89071270"/>
        <function-ref name="test" scoped="" ref="0x2aeb8902b930"/>
        <function-ref name="get" scoped="" ref="0x2aeb8902ed00"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb890716f8"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb89071bd0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb8902db58"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb8902d6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb8902bdb8"/>
        <function-ref name="set" scoped="" ref="0x2aeb8902d1f8"/>
        <function-ref name="start" scoped="" ref="0x2aeb8902b020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb8902b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb89106578" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb89106578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TOne" ref="0x2aeb881b09f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb89104c88"/>
        <function-ref name="fired" scoped="" ref="0x2aeb89105d08"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb89104680"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb891041f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb8914d150"/>
        <function-ref name="start" scoped="" ref="0x2aeb891053a8"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89105880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb891034e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb891034e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2aeb880eb388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2aeb880eb388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb89103838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aeb89103c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb89103c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb890f4db8"/>
        <function-ref name="test" scoped="" ref="0x2aeb890f44a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb890f7820"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb890f3270"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb890f3748"/>
        <function-ref name="reset" scoped="" ref="0x2aeb890f5658"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb890f51d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb890f4930"/>
        <function-ref name="set" scoped="" ref="0x2aeb890f7ca8"/>
        <function-ref name="start" scoped="" ref="0x2aeb890f5ae0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb890f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb898e3750" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb898e3750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2aeb880eb020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2aeb880eb020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TOne" ref="0x2aeb881b09f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb898e0020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb898e1020"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb898e1930"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb898e14a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb898e04a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb898e2578"/>
        <function-ref name="stop" scoped="" ref="0x2aeb898e2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2aeb898dba80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2aeb898dba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb898d7270"/>
        <function-ref name="fired" scoped="" ref="0x2aeb898d8020"/>
        <function-ref name="get" scoped="" ref="0x2aeb898da658"/>
        <function-ref name="reset" scoped="" ref="0x2aeb898d84a8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb898d76f8"/>
        <function-ref name="set" scoped="" ref="0x2aeb898daae0"/>
        <function-ref name="start" scoped="" ref="0x2aeb898d8930"/>
        <function-ref name="stop" scoped="" ref="0x2aeb898d8db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2aeb898e09c8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2aeb898e09c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb898dcb80"/>
        <function-ref name="test" scoped="" ref="0x2aeb898dc270"/>
        <function-ref name="get" scoped="" ref="0x2aeb898df598"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb898db088"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb898db560"/>
        <function-ref name="reset" scoped="" ref="0x2aeb898de4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb898de020"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb898dc6f8"/>
        <function-ref name="set" scoped="" ref="0x2aeb898dfa20"/>
        <function-ref name="start" scoped="" ref="0x2aeb898de930"/>
        <function-ref name="stop" scoped="" ref="0x2aeb898dedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb8914ce68" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb8914ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb89148a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb89146b18" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb89146b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TOne" ref="0x2aeb881b09f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb891438f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb89142230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb89143d80"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb891426b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb89140b90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb89140b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TOne" ref="0x2aeb881b09f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb8913f930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb8912d270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb8913fdb8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb8912d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aeb8912dc58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb8912dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb89129db8"/>
        <function-ref name="test" scoped="" ref="0x2aeb891294a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb8912b820"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb89172270"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb89172748"/>
        <function-ref name="reset" scoped="" ref="0x2aeb8912a658"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb8912a1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb89129930"/>
        <function-ref name="set" scoped="" ref="0x2aeb8912bca8"/>
        <function-ref name="start" scoped="" ref="0x2aeb8912aae0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb89129020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2aeb891522b0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2aeb891522b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb89151088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb89151998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb89151510"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb89151e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb891550e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb891550e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb89155e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb89153798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb89153310"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb89153c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb8914e988" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb8914e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb89199560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aeb89199b88" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb89199b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb88178430"/>
            <typename><typedef-ref name="TMicro" ref="0x2aeb88178788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb89198930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb89197270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb89198db8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb891976f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb89247390" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb89247390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb892476e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb89247868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb892479f0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89247b78"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb89247d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb89246020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb89246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb89246370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb892464f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb89246680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89246808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb89246990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb89246bd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb89246bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb89245020"/>
        <function-ref name="source" scoped="" ref="0x2aeb892451a8"/>
        <function-ref name="address" scoped="" ref="0x2aeb89245330"/>
        <function-ref name="destination" scoped="" ref="0x2aeb892454b8"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb89245640"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb892457c8"/>
        <function-ref name="type" scoped="" ref="0x2aeb89245950"/>
        <function-ref name="setType" scoped="" ref="0x2aeb89245ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb89245c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb89245de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb89244020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2aeb892442a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2aeb892442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb892445f8"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb89244780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb89244908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb89914398" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb89914398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb899146e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb89914870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb899149f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89914b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb89914d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aeb89913020" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb89913020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb89913370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb899134f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb89913680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89913808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb89913990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aeb89913bd8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb89913bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb89911020"/>
        <function-ref name="source" scoped="" ref="0x2aeb899111a8"/>
        <function-ref name="address" scoped="" ref="0x2aeb89911330"/>
        <function-ref name="destination" scoped="" ref="0x2aeb899114b8"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb89911640"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb899117c8"/>
        <function-ref name="type" scoped="" ref="0x2aeb89911950"/>
        <function-ref name="setType" scoped="" ref="0x2aeb89911ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb89911c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb89911de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb89910020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2aeb899102a8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2aeb899102a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aeb899105f8"/>
        <function-ref name="noAck" scoped="" ref="0x2aeb89910780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aeb89910908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aeb89907530" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb89907530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb89907880"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb89907a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89907b90"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89907d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb89971020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2aeb899712c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb899712c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb89971618"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb899717a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89971928"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89971ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb89971c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aeb89971e80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb89971e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb899701f8"/>
        <function-ref name="source" scoped="" ref="0x2aeb89970380"/>
        <function-ref name="address" scoped="" ref="0x2aeb89970508"/>
        <function-ref name="destination" scoped="" ref="0x2aeb89970690"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb89970818"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb899709a0"/>
        <function-ref name="type" scoped="" ref="0x2aeb89970b28"/>
        <function-ref name="setType" scoped="" ref="0x2aeb89970cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb89970e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb8996f020"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb8996f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb89206020" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb89206020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb89206370"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb892064f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89206680"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb89206808"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb89206990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2aeb8925a060" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aeb8925a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb8925a3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb8925a558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8925a6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb8925a868"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb8925a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aeb8925b2c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aeb8925b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aeb8925b638"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb8925b7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb8925b948"/>
        <function-ref name="cancel" scoped="" ref="0x2aeb8925bad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aeb8925bc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2aeb89258268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aeb89258268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aeb892585b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aeb89258740"/>
        <function-ref name="getPayload" scoped="" ref="0x2aeb892588c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aeb89258a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aeb89258bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2aeb89257020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2aeb89257020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb89257370"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb892574f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2aeb892577c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2aeb892577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb89257b10"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb89257c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aeb8925ac38" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aeb8925ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aeb89259020"/>
        <function-ref name="source" scoped="" ref="0x2aeb892591a8"/>
        <function-ref name="address" scoped="" ref="0x2aeb89259330"/>
        <function-ref name="destination" scoped="" ref="0x2aeb892594b8"/>
        <function-ref name="setSource" scoped="" ref="0x2aeb89259640"/>
        <function-ref name="setDestination" scoped="" ref="0x2aeb892597c8"/>
        <function-ref name="type" scoped="" ref="0x2aeb89259950"/>
        <function-ref name="setType" scoped="" ref="0x2aeb89259ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aeb89259c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2aeb89259de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aeb89258020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2aeb882a7dc0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aeb882a7b50" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2aeb882b4290" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aeb882b4020" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb882a71d8" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb882a6620" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2aeb88202020" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x2aeb8828a4e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8828a278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2aeb882894e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88289278" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aeb88286690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb882860c8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb882863d8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aeb882857c8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2aeb882878d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88287348" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb88287658" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2aeb882112a0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aeb882112a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2aeb88211ad8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2aeb8821d7c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aeb882112a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2aeb8821d248" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2aeb8821d548" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aeb882112a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aeb882a06a0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2aeb88293d70" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2aeb882a0100" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb882a0410" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aeb882aba68" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb882ab4a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb882ab7b0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aeb8829fc58" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb8829e948" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8829e6d8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aeb882acdd8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb882ac830" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aeb882acb58" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2aeb881fe428" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2aeb881feb60" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2aeb881fd328" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2aeb882091d8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2aeb88208810" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb88207020" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2aeb881fda40" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb88207b20" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2aeb882078b0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2aeb881ffcd8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2aeb88209948" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2aeb882080d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2aeb88295930" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb882956c0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2aeb8828fa88" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb8828f818" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2aeb88291020" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2aeb88291a78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb88291808" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2aeb8829b2a0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb88290c98" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb8829b020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2aeb8828ddc0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb8828d808" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb8828db40" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2aeb882995c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb88299358" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2aeb88298840" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb882982c0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2aeb882985c0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aeb88274848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2aeb8829a478" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb8829a208" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2aeb882a4d20" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aeb882a4770" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2aeb882a4aa0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2aeb882a2ac8" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb881f5dd0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb881f5dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aeb8820b760" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aeb8820f1d8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2aeb8820ede0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aeb8820e848" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aeb8820eb60" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2aeb8820e110" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2aeb8820a6b0" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2aeb8820be80" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aeb8820f950" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2aeb882038f0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb88203680" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2aeb8820cd28" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aeb8820c790" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aeb8820caa8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2aeb88210378" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb88210108" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb88210b20" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aeb882c4c70" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2aeb882ceae0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2aeb882ce870" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2aeb882d12a8" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2aeb882d1ca0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2aeb882d1a30" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2aeb882cf758" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2aeb882cf4e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2aeb882ce020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2aeb882e1b50" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2aeb882e0258" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2aeb882e3dd8" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2aeb882df020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb882e14a0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2aeb882e0910" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb882e30d8" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2aeb882e3748" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aeb88104378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2aeb88103258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2aeb88104a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2aeb8810f070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2aeb8810f860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2aeb881b6e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2aeb881dc4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2aeb88149940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2aeb881dd020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb884d5518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb884d5518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aeb884d5da8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb884e1a50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb884e1a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aeb884e1c80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884e1c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aeb884dd548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884e1c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2aeb884dc590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2aeb884ddd60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aeb884dcc80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb884d1738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb884d1738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aeb884d1968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aeb884ca290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aeb884cc418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2aeb884cb920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aeb884cb380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          </variable>
          <variable name="dt" ref="0x2aeb884cb6a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aeb884ccb88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2aeb884caa10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb884ce4a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb884ce238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb884d1968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb884cec78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2aeb884fe488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2aeb884ff360" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2aeb88502110" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2aeb884ffcd0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2aeb884ffa60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2aeb88500bb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aeb88500948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2aeb884fee00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2aeb884feb90" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2aeb88502840" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2aeb88500290" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aeb88500020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2aeb885229a8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2aeb88524a60" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2aeb885231d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2aeb885239a8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2aeb885211d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2aeb885221d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2aeb8850d888" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb8818f978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2aeb8818fd80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2aeb88524290" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb8818f978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2aeb8818fd80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2aeb88524020" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb8818f978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2aeb8818fd80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2aeb88504848" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88504848"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2aeb88511020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aeb88513258" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb88514178" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88504848"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aeb88513960" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aeb88511770" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb88514ac0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88504848"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2aeb88514850" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88504848"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb885120d8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb885127c0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2aeb884f8ac0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb884f8ac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2aeb88509020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2aeb884f10d8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb884f43a0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb884f8ac0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2aeb88509970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2aeb88509700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2aeb88508178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aeb884f3b58" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aeb884f3438" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aeb884f1830" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb884f4cd8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb884f8ac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2aeb884f4a68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb884f8ac0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb884f2290" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb884f2978" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2aeb886937d0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2aeb88693020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2aeb88677e00" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2aeb88677618" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2aeb88675658" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2aeb88690e58" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aeb88690e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2aeb8868c708" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2aeb8868b418" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aeb88690e58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2aeb8868ce50" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2aeb8868b198" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aeb88690e58"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2aeb88685938" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2aeb88686a00" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2aeb88686110" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2aeb886851d8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2aeb886a4360" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2aeb88697138" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2aeb88698420" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2aeb88698778" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2aeb88698ae0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2aeb88698e30" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2aeb88696da8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb88697d00" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2aeb88696060" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2aeb88696398" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2aeb88696748" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2aeb88696af8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2aeb8869dcd0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2aeb8869d020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2aeb8869d378" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2aeb8869d6e0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2aeb8869da30" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb8869b6a8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2aeb8869ce08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb8869c868" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2aeb8869cb88" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2aeb886a5a68" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2aeb886b0ab8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2aeb8816d3a0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2aeb8816d858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2aeb886c3cc0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2aeb886c3a50" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2aeb886c4328" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2aeb886a8780" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2aeb886ab4f0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2aeb8816d3a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2aeb8816d858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2aeb886ab280" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2aeb8816d3a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2aeb8816d858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2aeb886a75d8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2aeb886c3258" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb886c2488" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2aeb886a8e70" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2aeb886a6470" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2aeb886a7d20" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2aeb886a6b98" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2aeb886c4a88" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2aeb886aa6e8" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2aeb88173ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2aeb88172438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2aeb886aa478" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2aeb88173ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2aeb88172438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2aeb886a5378" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2aeb886abcc8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2aeb88173ce0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2aeb88172438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2aeb886a8020" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2aeb886c0020" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb886c2d28" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2aeb886af8e8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb886ae110" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2aeb8873c178" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2aeb8873ca40" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2aeb8873ae60" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2aeb88738e60" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2aeb8873a640" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2aeb88738698" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2aeb88737760" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2aeb887354b8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2aeb88735ca8" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2aeb8874e290" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aeb887334c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aeb8874e020" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aeb887334c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2aeb8872d360" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2aeb8872dde0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aeb887334c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aeb8872db70" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aeb887334c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2aeb8872c6d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2aeb887334c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2aeb88799c18" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb887c0b18" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb887c0b18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aeb887c0d48" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb887c0d48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2aeb887bd820" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb887c0d48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb887bd5b0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb887c0d48"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2aeb8883c020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2aeb8881c970" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2aeb8881ccd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2aeb8881b170" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
              <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8881e840" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2aeb8881eb68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb8881ee78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2aeb88831d88" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888317a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2aeb88831b08" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2aeb8882e020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88830c48" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2aeb88831020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2aeb88832678" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2aeb88832408" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2aeb88837520" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888372b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2aeb88836630" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888363c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2aeb88835700" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88835490" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2aeb8884f0a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88850dd0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2aeb88853348" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88839ce8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2aeb888530c8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2aeb88850118" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88852e78" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2aeb888526b0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888520c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2aeb88852430" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2aeb8884d020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8884fd30" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2aeb8884ba48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2aeb8884b290" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2aeb8884b020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2aeb8884a258" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb8882d308" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb8882d308"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aeb8882d538" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb8882d538"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2aeb88846290" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb8882d538"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88846020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2aeb88845370" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88845100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2aeb888480a8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8882dde8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb888445e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb8882d538"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88844020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2aeb88844360" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb8882d538"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2aeb8887b180" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aeb8887b180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2aeb88878108" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88879e50" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb888796c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aeb8887b180"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88879458" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2aeb8887bc90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8887ba20" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb88878dc0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aeb8887b180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888787f8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2aeb88878b40" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aeb8887b180"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2aeb8886fbd8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8886f968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2aeb8889ccf0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8889ca80" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2aeb8889f998" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2aeb8889c370" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8889c100" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2aeb888996b8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888990c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb88899438" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2aeb8889a9f0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8889a400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb8889a770" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2aeb88897980" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2aeb882564c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88897710" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2aeb88896600" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2aeb882564c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88896020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2aeb88896380" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2aeb882564c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2aeb88897020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88899d68" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2aeb88896d08" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2aeb882564c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aeb8887d960" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2aeb8887d060" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2aeb8887d3c0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb8887d6d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aeb888a1df0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888a1828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb888a1b38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aeb888a1020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb8887c6e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8887c478" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aeb888a3608" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888a3060" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aeb888a3388" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2aeb888cd020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2aeb888e1938" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e16c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2aeb888d2d10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d2aa0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2aeb888cf370" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888cf100" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2aeb888d36b0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d3440" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2aeb888d4020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888dfc70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2aeb888d2388" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d3d88" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb888d2108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2aeb888d4ce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d4728" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb888d4a60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2aeb888d09b0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d0400" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2aeb888d0730" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2aeb888da598" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2aeb888d9020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2aeb888d7290" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d7020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2aeb888d9aa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d9838" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2aeb888d85b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888d8348" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2aeb889028e0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2aeb88903a70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2aeb88258540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2aeb88903800" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2aeb88258540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb889021d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2aeb88903020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2aeb889000d8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aeb88258540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2aeb888fa290" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888fa020" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2aeb888fe6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888fe488" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aeb888fdd80" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2aeb888fd5d0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888fd020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2aeb888fd350" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2aeb88906bf0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88906980" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2aeb888fb7f0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888fb580" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aeb888cac90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2aeb888ca4e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888ca278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2aeb888c9780" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888c9510" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2aeb888c8020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2aeb888c8b28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888c88b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2aeb888b8338" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888b80c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2aeb888bf7a8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2aeb888bf040" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb888c0a30" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aeb888c0d90" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2aeb888c4cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888c4a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2aeb888c37b8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888c3548" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2aeb888c2640" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb888c2060" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aeb888c23c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2aeb888c6468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2aeb888c42a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888c6c70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aeb888c4020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2aeb888c0290" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888c0020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2aeb888e7290" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e7020" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2aeb888eaa08" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888ea798" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2aeb888f45c0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888f4020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2aeb888f4340" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2aeb888f25b8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888f2348" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2aeb888e2020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e39c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb888e3cf8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2aeb888f3aa8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888f3838" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2aeb888e9808" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e9278" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2aeb888e9588" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2aeb888ef020" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb888f08a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aeb888f0c08" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2aeb888e3290" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e3020" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2aeb888f3030" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888f4d90" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2aeb888ee920" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888ee6b0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2aeb888efe50" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb888ef870" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aeb888efbd0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2aeb88909548" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aeb882568b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2aeb888e2a20" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e27b0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2aeb8890bd88" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2aeb882564c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2aeb888e5748" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e5198" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aeb888e54c8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2aeb888f00a8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888f2dd0" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2aeb888ea020" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888eba38" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2aeb888ebd58" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2aeb888e6020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e79e8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2aeb888e7d08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2aeb88908020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88909c88" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2aeb888ec678" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888ec100" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aeb888ec3f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2aeb888f67f0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888f6580" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2aeb8890b538" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb8890b2c8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2aeb888e6a28" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888e67b8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2aeb888eb290" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888eb020" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2aeb888ba020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888bba20" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2aeb888bbd50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2aeb888ba7a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2aeb888bd830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888bd5c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2aeb888bb290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888bb020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2aeb888dead8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888de868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2aeb888de020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888becf8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2aeb888dd328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2aeb888ddd78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb888ddb08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2aeb88965a18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2aeb88964328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2aeb88964c40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2aeb88965328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2aeb889b48c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb889b4658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb889b0290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb889b0020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aeb889b17a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb889b11f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aeb889b1520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2aeb889b3c10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
              <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb889b3968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2aeb889c98f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2aeb889c87c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2aeb889c80d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2aeb889c9118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2aeb889ccae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aeb88274bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2aeb889cce20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2aeb88bc8e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
              <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88bc8bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2aeb88bc8290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88bc8020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2aeb88beb020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aeb88bedce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2aeb88beb790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb88bbfcf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aeb88bbfa88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb88bed640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aeb88bed3d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2aeb88bbc020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aeb88bbdd80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2aeb88bf04e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aeb88bf0270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2aeb88bbcab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aeb88bbc840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2aeb88bef020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aeb88bf0ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2aeb88bbd5b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aeb88bbd340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aeb88272020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2aeb88c74748" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2aeb88c71808" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2aeb88c70290" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2aeb88c70020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2aeb88c709f0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2aeb88c71020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2aeb88c6f258" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2aeb88c6c020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88c73d10" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2aeb88c6b3a0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aeb88c6cb58" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aeb88c6c8e8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2aeb88cdcd18" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2aeb88cdc580" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb87804608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2aeb88ceb508" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2aeb88ceb508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2aeb88d22020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2aeb88ceb508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2aeb88cebd40" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2aeb88ceb508"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2aeb88d37e50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88d37be0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb88d3cdc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88d3cb50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2aeb88d39ad0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88d39540" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2aeb88d39850" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb88d374e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb88d37278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2aeb88d7d5b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aeb88d7d348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2aeb88d44b70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2aeb88e371d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2aeb88e36290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2aeb88e37b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2aeb88e37890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2aeb88e3a9a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2aeb88e3e020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb88e41ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2aeb88e3c338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb88e3c0c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2aeb88e3e820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2aeb88e3cd40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb88e3cad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2aeb88f198f0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88f198f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2aeb88f532d0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2aeb88f53060" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2aeb88f551d8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb88f581d8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88f198f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2aeb88f574f0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88f198f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2aeb88f57280" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88f198f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aeb88f57c30" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aeb88f55928" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb88f58b10" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88f198f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2aeb88f588a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb88f198f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb88f56360" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb88f56a48" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aeb88f3bcd0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2aeb88f3b3c0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2aeb88f3b720" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb88f3ba40" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aeb88f7b2c0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2aeb88f7d540" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2aeb88f7d8a0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb88f7dbc0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aeb87803b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2aeb88f7b020" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2aeb88f3d290" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2aeb88f3d020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2aeb88f68760" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2aeb88f5e020" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2aeb88f63b98" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2aeb88f5e9c8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2aeb88f5e758" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2aeb88f68020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2aeb88f61640" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2aeb88f613d0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2aeb88f653f8" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2aeb88f65188" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2aeb88f67610" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2aeb88f9d290" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2aeb88f9d020" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2aeb88f65b30" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2aeb88f5da30" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2aeb88f5d7c0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2aeb88f5c8f0" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2aeb88f5f838" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2aeb88f5f5c8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2aeb88f9e7d0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2aeb88f62588" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2aeb88f62318" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2aeb88f66020" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb88f67cf8" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2aeb88f63498" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2aeb88f63228" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2aeb88f61e50" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2aeb88f5d110" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2aeb88f5c178" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2aeb88f9e070" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2aeb88f62ca0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb880e49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2aeb88f68e78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2aeb88f669a8" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aeb88f66738" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2aeb89040728" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2aeb8903da98" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2aeb890417d0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2aeb8903cc08" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2aeb8903c4a8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2aeb8903c238" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2aeb8903e9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aeb8903e760" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2aeb8903b5b8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2aeb8903b348" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2aeb89040020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2aeb8903d338" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aeb8903d0c8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2aeb8903e0a8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aeb89040de0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aeb891d12a0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb891d4c30" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb891d1020" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aeb891cd5e8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb891cd020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aeb891cd330" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aeb891cc740" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb87803160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aeb891d04e8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb891d0278" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aeb891cf8f0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aeb891cf348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aeb8827d510"/>
                <typename><typedef-ref name="message_t" ref="0x2aeb8828caa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aeb891cf670" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aeb88109ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
